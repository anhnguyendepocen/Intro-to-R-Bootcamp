{
    "collab_server" : "",
    "contents" : "# Session 3: Understanding Data Structures\n\n\n###########\n# Vectors #\n###########\n\n# Creating vectors\n## simple vector creation\n1:10\n2.5:15\nc(2, 10, 4)\n\n\n## sequences of numbers with non-random specifications\nseq(0, 30, by = 3)\nseq(0, 30, length.out = 6)\nrep(1:4, times = 2)\nrep(1:4, each = 2)\n\n\n## sequences of numbers with random specifications\nrunif(n = 100, min = 0, max = 10)\nrnorm(n = 100, mean = 10, sd = 2)\n\n\n# Understanding vector properties\nfacebook <- read.delim(\"data/facebook.tsv\")\nlikes <- facebook$likes\n\nclass(likes)\nstr(likes)\nlength(likes)\nhead(likes)\ntail(likes, 20)\n\n\n# Extracting/subsetting vectors (vector[i])\n## extract elements with bracket notation\nlikes[1]\nlikes[1:10]\nlikes[c(10, 13512, 3778, 59131)]\n\n\n## extract elements based on another vector\nsubset_vector <- c(10, 13512, 3778, 59131)\nlikes[subset_vector]\n\n\n# Comparison operators\nviral <- likes >= 5000\ndull <- likes == 0\nnormal <- likes > 0 & likes < 5000\nknow_somebody <- likes != 0\n\nsum(viral)\nsum(viral)/length(likes)\nwhich(viral)\n\n\n# Subsetting data based on comparison operators\nlikes[likes > 15000]\npopular <- likes[likes >= 5000]\nlonely <- likes[likes == 0]\n\n\n# Summarizing vectors\nsummary(likes)\nmean(likes, na.rm = TRUE)\nmedian(likes, na.rm = T)\nsd(likes)\nrange(likes)\nmin(likes)\nmax(likes)\n\n\n##############\n# YOUR TURN! #\n##############\n# Save the friend_count variable from the facebook data as a vector:\n        \nfc <- facebook$friend_count\n\n# 1. What are the min, max, median, and mean number of friends?\nsummary(fc)\n\n# 2. How many people have 0 friends?\nsum(fc == 0)\n\n# 3. How many people have 1,000 or more friends?\nsum(fc >= 1000)\n\n# 4. Which element contains the maximum number of friends?\nwhich(fc == max(fc))\n\n\n\n############\n# Matrices #\n############\n\n# Creating matrices\nmatrix(1:12, nrow = 3, ncol = 3)\n\n\n# Understanding matrix properties\nm <- matrix(runif(12), nrow = 3)\n\nclass(m)\nstr(m)\nlength(m)\ndim(m)\n\n\n# Extracting/subsetting matrices (matrix[row, col])\nm[1, 3]\nm[1:2, ]\nm[, 2]\nm[, 2, drop = FALSE]\n\n\n# Comparison operators\nm > .5\nsum(m > .5)\nwhich(m > .5)\nm[m > .5]\n\n\n# Summarizing matrices\nsummary(m)\nmean(m)\nmedian(m)\nmean(m[1, ])\napply(m, MARGIN = 1, FUN = mean)\n\n\n##############\n# YOUR TURN! #\n##############\n# Save the friend_count variable from the facebook data as a vector:\n\nfc <- facebook$friend_count\n\n# 1. Subset fc to find individuals with more than 4,600 friends\nQ1 <- fc[fc > 4600]\n\n# 2. Turn this subsetted vector into a matrix with 10 rows\nQ2 <- matrix(Q1, nrow = 10)\n\n# 3. What are the dimensions of this matrix\ndim(Q2)\n\n\n\n\n\n############\n# Lists #\n############\n\n# Creating lists\nl1 <- list(item1 = 1:3,\n           item2 = letters[1:5],\n           item3 = c(T, F, T, T),\n           item4 = matrix(1:9, nrow = 3))\nl1\n\n\n# Understanding list properties\nclass(l1)\nstr(l1)\nlength(l1)\nnames(l1)\n\n\n# Extracting/subsetting lists \nl1[\"item4\"]\nl1[[\"item4\"]]\nl1$item4\n\nl1[[2]]\nl1[[2]][2]\nl1$item2[2]\n\n\n# What you need to know - how to get results out of statistical models\nmodel <- lm(mpg ~ wt, data = mtcars)    # linear regression model\nmode(model)\nstr(model)\nnames(model)\n\nmodel$residuals\n\n\n###############\n# Data Frames #\n###############\n\n# Creating data frames\ndf <- data.frame(variable.1 = 1:3,\n                 variable.2 = c(\"a\", \"b\", \"c\"),\n                 variable.3 = c(TRUE, TRUE, FALSE))\n\n\n# Understanding data frame properties\n\n\n# Extracting/subsetting data frames (data.frame[row, col])\n\n\n# Conditional subsetting data frames (subset[data.frame, row condition, column selection])\n\n\n# Summarizing data frames",
    "created" : 1469734721183.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "196091478",
    "id" : "78A2712C",
    "lastKnownWriteTime" : 1469737814,
    "last_content_update" : 1469737814579,
    "path" : "~/Dropbox/Academia/University of Cincinnati/Intro to R Bootcamp/Files - teacher/3-data-structures-teacher.R",
    "project_path" : "Files - teacher/3-data-structures-teacher.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}