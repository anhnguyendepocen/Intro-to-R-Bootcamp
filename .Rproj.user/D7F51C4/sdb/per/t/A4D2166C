{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Programming\"\nsubtitle: \"Getting started with charts in R\"\nauthor: | \n  | Brad Boehmke, Ph.D.\noutput: \n  ioslides_presentation:\n    logo: images/uc_logo2.png\n    widescreen: true\n    smaller: true\n    transition: 0.01\n---\n\n\n# Key Things to Remember\n\n## Not all charts need to be pretty!\n\n<br>\n<br>\n\n<center>\n<img src=\"images/quickplots_icon2.png\" width=\"60%\" height=\"60%\"/>\n</center>\n\n## What to Remember from this Section\n\n<font size=\"6\">\n<blockquote>\nExploratory data analysis plotting should be quick and simple and base R excels at this\n</blockquote>\n</font>\n\nVisualization           Function             \n-------------           ---------       \nStrip chart             `stripchart()`\nHistogram               `hist()`\nDensity plot            `plot(density())`\nBox plot                `boxplot()`\nBar chart               `barplot()`\nDot plot                `dotchart()`\nScatter plot            `plot()`, `pairs()`\nLine chart              `plot()`\n-------------           ---------\n\n\n## What to Remember from this Section\nIn R, graphs are typically created interactively:\n\n```{r, eval=FALSE}\nattach(mtcars)\nplot(wt, mpg) \nabline(lm(mpg~wt))\ntitle(\"Regression of MPG on Weight\")\n```\n\n```{r, echo=FALSE, fig.align='center', message=FALSE, fig.height=4, fig.width=10}\npar(mfrow = c(1, 3))\n\nattach(mtcars)\nplot(wt, mpg) \n\nattach(mtcars)\nplot(wt, mpg)\nabline(lm(mpg~wt))\n\nattach(mtcars)\nplot(wt, mpg)\nabline(lm(mpg~wt))\ntitle(\"Regression of MPG on Weight\")\n```\n\n## What to Remember from this Section\n\n<br>\n\n<font size=\"6\">\n<blockquote>\nYou can specify fonts, colors, line styles, axes, reference lines, etc. by specifying [graphical parameters](http://www.statmethods.net/advgraphs/parameters.html)\n</blockquote>\n</font>\n\n<br>\n\n<font size=\"6\">\n<blockquote>\nThis allows a wide degree of customization; however...\n</blockquote>\n</font>\n\n<br>\n\n<font size=\"6\">\n<blockquote>\nI have found that `ggplot` is an easier syntax for customization needs\n</blockquote>\n</font>\n\n## Data Used...\n\n<font size=\"6\">\n<blockquote>\nImport the following data sets from the data folder\n</blockquote>\n</font>\n\n```{r, eval=FALSE}\nfacebook.tsv\nreddit.csv\nrace-comparison.csv\nSupermarket Transactions.xlsx\n```\n\n\n\n\n# Univariate Visualizations\n\n## Continuous Variables: Strip Chart\n\nUseful when sample sizes are small but not when sample size are large\n\n```{r, eval=FALSE}\nstripchart(mtcars$mpg, pch = 16)\nstripchart(facebook$tenure, pch = 16)\n```\n\n```{r, echo=FALSE, cache=TRUE}\nfacebook <- read.delim(\"data/facebook.tsv\")\n```\n\n```{r, echo=FALSE, fig.align='center', fig.height=3, fig.width=8, warning=FALSE, message=FALSE}\npar(mfrow = c(2, 1), mar = c(2,1,1,1))\n\nstripchart(mtcars$mpg, pch = 16)\nstripchart(facebook$tenure, pch = 16)\n```\n\n## Continuous Variables: Histogram\n\n```{r, eval=FALSE}\nhist(facebook$tenure)\n\nhist(facebook$tenure, breaks = 100, col = \"grey\", main = \"Facebook User Tenure\", xlab = \"Tenure (Days)\")\n```\n\n```{r, echo=FALSE, fig.align='center', message=FALSE, fig.height=4, fig.width=10}\npar(mfrow = c(1, 2))\n\nhist(facebook$tenure)\n\nhist(facebook$tenure, breaks = 100, col = \"grey\", main = \"Facebook User Tenure\", xlab = \"Tenure (Days)\")\n```\n\n## Continuous Variables: Histogram\nA perfect example of why customization with base R is not always enjoyable; in ggplot this is far simpler\n\n```{r, fig.align='center', fig.height=3, fig.width=5}\nx <- na.omit(facebook$tenure)\n\n# histogram\nh<-hist(x, breaks = 100, col = \"grey\", main = \"Facebook User Tenure\", xlab = \"Tenure (Days)\") \n\n# add a normal curve\nxfit <- seq(min(x), max(x), length = 40) \nyfit <- dnorm(xfit, mean = mean(x), sd = sd(x)) \nyfit <- yfit * diff(h$mids[1:2]) * length(x) \nlines(xfit, yfit, col = \"red\", lwd = 2)\n```\n\n## Continuous Variables: Density Plot\nEnclose density(x) within plot()\n\n```{r, eval=FALSE}\n# basic density plot\nd <- density(facebook$tenure, na.rm = TRUE)\n\nplot(d, main = \"Kernel Density of Tenure\")\n\n# fill denisty plot by adding polygon()\npolygon(d, col = \"red\", border = \"blue\")\n```\n\n```{r, echo=FALSE, fig.align='center', message=FALSE, fig.height=4, fig.width=8}\npar(mfrow = c(1, 2), mar = c(8,3,1,1))\n\nplot(density(facebook$tenure, na.rm = TRUE), main = \"Kernel Density of Tenure\")\nplot(density(facebook$tenure, na.rm = TRUE), main = \"Kernel Density of Tenure\")\npolygon(density(facebook$tenure, na.rm = TRUE), col = \"red\", border = \"blue\")\n```\n\n## Continuous Variables: Box Plot\n\nThe previous methods provide good insights into the shape of the distribution but don't necessarily tell us about specific summary statistics such as:\n\n```{r}\nsummary(facebook$tenure)\n```\n\nHowever, boxplots provide a concise way to illustrate these standard statistics, the shape, and outliers of data:\n\n<center>\n<img src=\"https://www.leansigmacorporation.com/wp/wp-content/uploads/2015/12/Box-Plot-MTB_01.png\" alt=\"Generic Box Plot\" width=\"500\" vspace=\"20\">\n</center>\n\n## Continuous Variables: Box Plot\n\n```{r, eval=FALSE}\nboxplot(facebook$tenure, horizontal = TRUE)\nboxplot(facebook$tenure, horizontal = TRUE, notch = TRUE, col = \"grey40\")\n```\n\n```{r, echo=FALSE, fig.align='center', message=FALSE, fig.height=5, fig.width=8}\npar(mfrow = c(2, 1), mar = c(3,1,1,1))\nboxplot(facebook$tenure, horizontal = TRUE)\nboxplot(facebook$tenure, horizontal = TRUE, notch = TRUE, col = \"grey40\")\n```\n\n## Your Turn\n<br>\n\n<center>\n<font size=\"6\">\nUsing the `facebook.tsv` data...\n</font>\n\n<br>\n\n<blockquote>\n<font size=\"6\">\nVisually assess the continuous variables. What do you find?\n</font>\n</blockquote>\n</center>\n\n\n## Categorical Variables: Bar Chart\n\n```{r, collapse=TRUE, fig.align='center', fig.height=4, fig.width=5}\nreddit <- read.csv(\"data/reddit.csv\")\n\ntable(reddit$dog.cat)\n\nbarplot(table(reddit$dog.cat))\n```\n\n## Categorical Variables: Bar Chart\n\n```{r, eval=FALSE}\npets <- table(reddit$dog.cat)\n\nbarplot(pets, main = \"Reddit User Animal Preferences\", col = \"cyan\")\n\npar(las = 1)\nbarplot(pets, main = \"Reddit User Animal Preferences\", horiz = TRUE, names.arg = c(\"Cats\", \"Dogs\", \"Turtles\"))\n```\n\n```{r, echo=FALSE, fig.align='center', message=FALSE, fig.height=4.5, fig.width=10}\npar(mfrow = c(1, 2))\n\npets <- table(reddit$dog.cat)\n\nbarplot(pets, main = \"Reddit User Animal Preferences\", col = \"cyan\")\n\npar(las = 1)\nbarplot(pets, main = \"Reddit User Animal Preferences\", horiz = TRUE, names.arg = c(\"Cats\", \"Dogs\", \"Turtles\"))\n```\n\n## Categorical Variables: Bar Chart\n\nWhat if we want to visualize data regarding many categories...\n\n```{r, message=FALSE, warning=FALSE}\nlibrary(dplyr)\n\nstate <- reddit %>%\n        group_by(state) %>%\n        tally() %>%\n        arrange(n) %>%\n        filter(state != \"\")\n\nstate\n```\n\n## Categorical Variables: Bar Chart\n\nBar charts work but...\n\n```{r, echo=FALSE, fig.align='center', fig.height=8}\npar(mar = c(3,8,1,1), las = 1)\nbarplot(state$n, names.arg = state$state, horiz = TRUE)\n```\n\n\n\n## Categorical Variables: Dot Plot\n\ndot plots provide less noise\n\n\n```{r, fig.align='center', message=FALSE, fig.width=6, fig.height=8}\ndotchart(state$n,labels = state$state, cex = .7)\n```\n\n\n\n## Your Turn\n<br>\n\n<font size=\"6\">\nUsing the `reddit.csv` data...\n</font>\n\n<br>\n\n<blockquote>\n<font size=\"6\">\n1. Assess the frequency of education levels. What does this tell you?\n</font>\n</blockquote>\n<br>\n\n**Hint:** preceed your plot function with `par(mar = c(5,15,1,1), las = 2)`\n\n\n<br>\n\n<blockquote>\n<font size=\"6\">\n2. Assess how the different cheeses rank with Reddit users. What does this tell you?\n</font>\n</blockquote>\n\n\n\n\n\n\n# Multivariate Visualizations\n\n## Scatter Plot\n\n```{r, eval=FALSE}\nplot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = \"blue\")\nplot(x = race$Black_unemployment, y = race$black_college, pch = 16, col = \"blue\")\n```\n\n\n```{r, echo=FALSE, fig.align='center', fig.height=5, fig.width=10}\nrace <- read.csv(\"data/race-comparison.csv\")\n\npar(mfrow = c(1, 2))\nplot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = \"blue\")\nplot(x = race$Black_unemployment, y = race$black_college, pch = 16, col = \"blue\")\n```\n\n\n## Scatter Plot\n\nWe can fit lines to the data but need to use `~` instead of `x` & `y`\n\n\n```{r, eval=FALSE}\npar(mar = c(5,5,1,1))\nplot(White_unemployment ~ Black_unemployment, data = race)\nabline(lm(White_unemployment ~ Black_unemployment, data = race), col = \"red\")\nlines(lowess(race$White_unemployment ~ race$Black_unemployment), col = \"blue\")\n```\n\n```{r, echo=FALSE, fig.align='center', fig.height=4, fig.width=4}\npar(mar = c(5,5,1,1))\nplot(White_unemployment ~ Black_unemployment, data = race)\nabline(lm(White_unemployment ~ Black_unemployment, data = race), col = \"red\")\nlines(lowess(race$White_unemployment ~ race$Black_unemployment), col = \"blue\")\n```\n\n## Scatter Plot Matrix\n\nWe can assess scatter plots for multiple variables at once\n\n```{r, fig.align='center'}\npar(mar = c(2,2,2,2))\npairs(race)\n```\n\n\n\n## Line Chart\n\n\n```{r, eval=FALSE}\nplot(x = race$Year, y = race$black_college, type = \"l\")\nplot(x = race$Year, y = race$black_college, type = \"s\")\nplot(x = race$Year, y = race$Black_unemployment, type = \"b\")\n```\n\n```{r, echo=FALSE, fig.align='center', message=FALSE, fig.height=4, fig.width=10}\npar(mfrow = c(1, 3))\nplot(x = race$Year, y = race$black_college, type = \"l\")\nplot(x = race$Year, y = race$black_college, type = \"s\")\nplot(x = race$Year, y = race$Black_unemployment, type = \"b\")\n```\n\n## Line Chart\n\n```{r, eval=FALSE}\nplot(x = race$Year, y = race$Black_hs, type = \"l\", ylim = c(0, max(race$Black_hs)))       # initial plot\nlines(x = race$Year, y = race$black_college, col = \"red\")  # add points to second line\nlines(x = race$Year, y = race$Black_unemployment, col = \"blue\", lty = 2)\nlegend(\"topleft\", legend = c(\"HS Rate\", \"College Rate\", \"Unemployment\"), \n       col = c(\"black\", \"red\", \"blue\"), lty = c(1, 1, 2))\n```\n\n```{r, fig.align='center', fig.height=4, fig.width=6, echo=FALSE}\npar(mar = c(2,5,1,2))\n\nplot(x = race$Year, y = race$Black_hs, type = \"l\", ylim = c(0, max(race$Black_hs)))       # initial plot\nlines(x = race$Year, y = race$black_college, col = \"red\")  # add points to second line\nlines(x = race$Year, y = race$Black_unemployment, col = \"blue\", lty = 2)\nlegend(\"topleft\", legend = c(\"HS Rate\", \"College Rate\", \"Unemployment\"), \n       col = c(\"black\", \"red\", \"blue\"), lty = c(1, 1, 2))\n```\n\n\n\n## Box Plot\n\n```{r, eval=FALSE}\nlibrary(readxl)\nsupermarket <- read_excel(\"data/Supermarket Transactions.xlsx\", sheet = \"Data\")\n\nboxplot(supermarket$Revenue)\nboxplot(Revenue ~ Gender, data = supermarket)\nboxplot(Revenue ~ Gender + `Marital Status`, data = supermarket)\n```\n\n```{r, echo=FALSE, fig.align='center', warning=FALSE, message=FALSE, fig.height=4, fig.width=10}\nlibrary(readxl)\nsupermarket <- read_excel(\"data/Supermarket Transactions.xlsx\", sheet = \"Data\")\npar(mfrow = c(1, 3))\nboxplot(supermarket$Revenue)\nboxplot(Revenue ~ Gender, data = supermarket)\nboxplot(Revenue ~ Gender + `Marital Status`, data = supermarket)\n```\n\n\n## Your Turn\n\n<br>\n\n<font size=\"6\">\nUsing the `supermarket` data analyze revenue by...\n</font>\n\n<br>\n\n<blockquote>\n<font size=\"6\">\n- Date <br>\n- Homeownership <br>\n- City <br>\n- Product family/category <br>\n- Etc.\n</font>\n</blockquote>\n\n<br>\n\n<font size=\"6\">\nWhat do you find?\n</font>\n\n## Bar Chart\n\nBar chart can help to compare multiple categories\n\n```{r, eval=FALSE}\ncounts <- table(supermarket$`Marital Status`, supermarket$Children)\n\nbarplot(counts, col = c(\"darkblue\", \"red\"), legend = c(\"Married\", \"Single\"))\nbarplot(counts, col = c(\"darkblue\", \"red\"), legend = c(\"Married\", \"Single\"), beside = TRUE)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.height=4, fig.width=10}\ncounts <- table(supermarket$`Marital Status`, supermarket$Children)\npar(mfrow = c(1, 2), mar = c(2,2,2,2))\nbarplot(counts, col = c(\"darkblue\", \"red\"), legend = c(\"Married\", \"Single\"))\nbarplot(counts, col = c(\"darkblue\", \"red\"), legend = c(\"Married\", \"Single\"), beside = TRUE)\n```\n\n\n## Your Turn\n<br>\n\n<font size=\"6\">\nUsing the `supermarket` data compare counts of...\n</font>\n\n<br>\n\n<blockquote>\n<font size=\"6\">\n- Product Family by Homeownership <br>\n- Annual Income by Homeownership <br>\n- Country by Gender <br>\n- Etc.\n</font>\n</blockquote>\n\n<br>\n\n<font size=\"6\">\nWhat do you find?\n</font>\n\n\n# Key Things to Remember\n\n## Remember These Functions!\n\nVisualization           Function             \n-------------           ---------       \nStrip chart             `stripchart()`\nHistogram               `hist()`\nDensity plot            `plot(density())`\nBox plot                `boxplot()`\nBar chart               `barplot()`\nDot plot                `dotchart()`\nScatter plot            `plot()`, `pairs()`\nLine chart              `plot()`\n-------------           ---------\n\n\n## Break {.flexbox .vcenter}\n\n<div class=\"centered\">\n\n<font size=\"10\">5 minutes!</font>",
    "created" : 1469763614543.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1925703956",
    "id" : "A4D2166C",
    "lastKnownWriteTime" : 1469727715,
    "last_content_update" : 1469727715,
    "path" : "~/Dropbox/Academia/University of Cincinnati/Intro to R Bootcamp/7-quickplots-teacher.Rmd",
    "project_path" : "7-quickplots-teacher.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}