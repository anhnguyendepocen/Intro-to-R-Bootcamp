{
    "collab_server" : "",
    "contents" : "# Session 8: Advanced Graphics with ggplot\n\n########\n# GR&A #\n########\n# packages used\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(dplyr)\n\n# data used\nsupermarket <- read_excel(\"data/Supermarket Transactions.xlsx\", sheet = \"Data\")\nfacebook <- read.delim(\"data/facebook.tsv\")\nreddit <- read.csv(\"data/reddit.csv\")\nrace <- read.csv(\"data/race-comparison.csv\")\nmpg\n\n\n###############\n# First Layer #\n###############\n# notes:\n\n# blank canvas\nggplot(data = supermarket)\n\n# map variables to coordinates\nggplot(data = mpg, aes(x = displ, y = hwy))\nggplot(mpg, aes(displ, hwy))\n\n\n########################## UNIVARIATE GEOMS ##########################\n\n##################################################\n# Histogram, Frequency Polygons & Denisity Plots #\n##################################################\n# notes:\n\n# default\nggplot(data = mpg, aes(x = hwy)) +\n        geom_histogram()\n\nggplot(data = mpg, aes(x = hwy)) +\n        geom_freqpoly()\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_density()\n\n# adjust aesthetics to each of these plots (i.e. bins, color, opacity)\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_histogram()\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_freqpoly()\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_density()\n\n\n#############\n# Bar chart #\n#############\n# notes:\n\n# default bar chart tallies counts for each variable\nggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\n# change this bar chart to plot data already tallied\nsummary <- supermarket %>%\n        group_by(`Product Family`) %>%\n        tally()\n\nggplot(data = summary, aes(x = `Product Family`, y = n)) +\n        geom_bar()\n\n\n# adjust aesthetics to this plot (i.e. fill, color, bar width)\nggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\n\n\n#############\n# Your Turn #\n#############\n\n# 1. Assess the distribution of age, tenure, and gender in the facebook data.\n\n\n\n# 2. Assess the frequency of age range, education, and income range in the reddit data.\n\n\n########################## BIIVARIATE GEOMS ##########################\n\n#################\n# Scatter Plots #\n#################\n# notes:\n\n# add the geom required to produce a scatter plot; add some color, change the\n# shape, opacity, etc.\nggplot(supermarket, aes(`Purchase Date`, Revenue))\n\n\n# what geom could replace geom_point to resolve the overplotting issues in this plot?\nggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_point()\n\n\n\n\n###############\n# Line Charts #\n###############\n# notes:\n\n# this code produces total sales by date\nsales_by_date <- supermarket %>%\n        group_by(`Purchase Date`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\n# add a geom to this base plot to visualize total sales by date\nggplot(sales_by_date, aes(`Purchase Date`, Revenue))\n\n\n# now add some trend lines\n\n\n\n\n\n############\n# Box Plot #\n############\n# notes:\n\n# add the required geom to turn this base plot into boxplots\nggplot(supermarket, aes(factor(Children), Revenue))\n\n\n# add some parameters to the geom to adjust coloring, outliers, notching, etc.\n\n\n# over-plotting on boxplots can be uesful for smaller data sets. Add/change the\n# geom and some paramters to do some boxplot overplotting\nggplot(mpg, aes(class, hwy)) +\n        geom_boxplot()\n\n\n\n\n\n#############\n# Bar Chart #\n#############\n\n# default bar chart plots counts\nggplot(supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\n# what if we want to plot a 2nd variable like revenue as in this data set:\nprod_revenue <- supermarket %>%\n        group_by(`Product Family`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\n# add the parameter required in the geom_bar() function to plot this\nggplot(prod_revenue, aes(x = `Product Family`, y = Revenue)) +\n        geom_bar()\n\n\n\n\n#############\n# Your Turn #\n#############\n\n# Assess bivariate relationships between tenure, age, gender, likes, etc. in \n# the facebook data.\n\n\n\n########################## MULTIVARIATE CAPABILITIES ##########################\n\n############################\n# Color, Size, Shape, etc. #\n############################\n\n# Add the parameter required to assess these plots across different categories\nggplot(supermarket, aes(Revenue)) +\n        geom_freqpoly()\n\nggplot(data = supermarket, aes(`Product Family`)) +\n        geom_bar(position = \"dodge\")\n\nggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point()\n\n# likewise for line charts; here is data that represents total revenue by date\n# for each product family (i.e. food, drink, non-consumable)\nprod_revenue <- supermarket %>%\n        group_by(`Purchase Date`, `Product Family`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\n# add the parameter in aes to plot the three different lines that represent total\n# revenue by product family\nggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_line(alpha = .2) +\n        geom_smooth(se = FALSE, span = .1)\n\n\n#############\n# Facetting #\n#############\n\n# another option is to produce \"small multiples\"; add the required function to\n# change this line chart to 3 small multiples\nggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_line(alpha = .2) +\n        geom_smooth(se = FALSE, span = .1)\n\n\n\n\n\n\n#############\n# Your Turn #\n#############\n\n# Use color, shape, size, and facetting to assess multivariate relationships \n# between tenure, age, gender, likes, etc. in the facebook data.\n\n\n\n\n\n########################## Visualization Aesthetics ##########################\n\n##########################\n# Scales, Axes & Legends #\n##########################\n\n# consider this basic histogram\np <- ggplot(supermarket, aes(Revenue)) +\n        geom_histogram(bins = 100, color = \"grey40\", fill = \"white\")\n\n# we can control axis parameters with scale_ ; insert certain parameters below\n# to adjust the axis limits, breaks, and label formatting\np + scale_x_continuous()\n\np + scale_x_log10()\n\n\n# we can also use the xlim, ylim, and lim shorthand functions; add parameters\n# below to adjust the limits\np + xlim()\np + ylim()\np + lims(x = , y = )\n\n\n# or we can use coord_ to adjust coordinates without impacting underlying data\np + coord_cartesian(xlim = c(10, 50), ylim = c(0, 400))\np + coord_flip()\n\n\n# we can also use labs, xlab, ylab, & ggtitle for shorthand labeling; add\n# titles to the parameters in the labs() function below\nggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +\n        geom_line(alpha = .2) +\n        geom_smooth(se = FALSE, span = .1) +\n        labs(x = , y = , color = , title = )\n\n\n# Legend features can be controlled with guides and positioning is \n# controlled within theme; add arguments to the guides() and theme() functions\n# below to adjust the legend\nggplot(supermarket, aes(`Purchase Date`, Revenue, color = Country)) +\n        geom_point(alpha = .2) +\n        guides() +\n        theme()\n\n\n\n\n#############\n# Your Turn #\n#############\n\n# Try to re-create displayed visualization as close as possible\n\n\n\n\n\n##########\n# Themes #\n##########\n\n# Several theme options are available (even more in the ggthemes package)\np <- ggplot(supermarket, aes(Revenue)) +\n        geom_histogram(bins = 100, fill = \"antiquewhite\", color = \"grey40\")\n\np + theme_classic()\np + theme_minimal()\np + theme_dark()\n\n\n# consider this basic plot\nbasic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +\n         geom_line(alpha = .2) +\n         geom_smooth(se = FALSE, span = .1) +\n         scale_y_continuous(labels = scales::dollar) +\n         labs(x = NULL, color = NULL, y = NULL, title = \"Total Historical Revenue by Product Family\")\n\n# add some parameters to the theme() function to adjust how the graphic looks\nbasic + theme_minimal() +\n        theme()\n\n\n\n\n\n#############\n# Your Turn #\n#############\n\n# Using this base plot practice adjusting theme parameters.\n\nggplot(supermarket, aes(Revenue)) +\n        geom_histogram(bins = 100, fill = \"antiquewhite\", color = \"grey40\")\n\n\n\n\n\n\n\n\n\n",
    "created" : 1469821377329.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4011905788",
    "id" : "FEF1A389",
    "lastKnownWriteTime" : 1469817694,
    "last_content_update" : 1469817694,
    "path" : "~/Dropbox/Academia/University of Cincinnati/Intro to R Bootcamp/Files - students/8-ggplot-students.R",
    "project_path" : "Files - students/8-ggplot-students.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}