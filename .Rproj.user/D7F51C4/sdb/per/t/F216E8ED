{
    "collab_server" : "",
    "contents" : "# Session 6: Transforming & manipulating data sets with dplyr\n\n\n################\n# Requirements #\n################\n# install.packages(\"dplyr\")\n# devtools::install_github(\"rstudio/EDAWR\")\n\nlibrary(dplyr)\nlibrary(EDAWR)\n\n# data used (from the EDAWR package)\nstorms\ntb\npollution\niris\na\nb\n\n\n############\n# select() #\n############\n\n# these two options are the same\nselect(storms, storm, pressure)\nstorms %>% select(storm, pressure)\n\n\n\n##############\n# YOUR TURN! #\n##############\n# Import the facebook.tsv file in the data folder\nfacebook <- read.delim(\"data/facebook.tsv\")\n\n# Create a new data frame that includes: userid, age, gender, friend_count\nfacebook2 <- facebook %>% select(userid, age, gender, friend_count)\n\nhead(facebook2)\n\n\n\n\n############\n# filter() #\n############\n# Notes: \n\n\n# these two options are the same\nfilter(storms, wind >= 50)\nstorms %>% filter(wind >= 50)\n\n# can filter for multiple conditions\nstorms %>% filter(wind >= 50,\n                  storm %in% c(\"Alberto\", \"Alex\", \"Allison\"))\n\n\n\n##############\n# YOUR TURN! #\n##############\n# 1. Filter the facebook data for just males\nfb_males <- facebook %>% filter(gender == \"male\")\n\n\n# 2. Select the userid, age, gender, friend_count variables and then \n#    filter for males\n\n# Option 1\nfacebook2 <- facebook %>% select(userid, age, gender, friend_count)\nfb2_males <- facebook %>% filter(gender == \"male\")\n\n# Option 2\nfb2_males <- facebook %>%\n        select(userid, age, gender, friend_count) %>%\n        filter(gender == \"male\")\n\nfb2_males\n\n\n\n\n##############\n# group_by() #\n##############\n# Notes: \n\n\n# these two options are the same\ngroup_by(tb, country)\ntb %>% group_by(country)\n\n# group by multiple categorical variables\ntb %>% group_by(country, year)\n\n\n\n##############\n# YOUR TURN! #\n##############\n# 1. Select the userid, age, gender, friend_count variables variables and \n#    then group by gender\nfacebook %>%\n        select(userid, age, gender, friend_count) %>%\n        group_by(gender)\n\n\n\n\n###############\n# summarise() #\n###############\n# Notes: \n\n\niris\n\n# these are the same\nsummarise(iris, Avg_SL = mean(Sepal.Length))\niris %>% summarise(Avg_SL = mean(Sepal.Length))\n\n# get multiple summary statistics of a single variable\niris %>% summarise(mean_SL = mean(Sepal.Length),\n                   med_SL = median(Sepal.Length),\n                   SD_SL = sd(Sepal.Length),\n                   n = n())\n\n\n# combine group_by() and summarise()\niris %>% \n        group_by(Species) %>%\n        summarise(mean_SL = mean(Sepal.Length),\n                  med_SL = median(Sepal.Length),\n                  SD_SL = sd(Sepal.Length),\n                  n = n())\n\n# get summary statistics of multiple variables\niris %>% \n        group_by(Species) %>%\n        summarise_each(funs(mean))\n\niris %>% \n        group_by(Species) %>%\n        summarise_each(funs(mean, sd))\n\n\n\n##############\n# YOUR TURN! #\n##############\n# Continuing with our facebook data...\n# 1. Calculate the mean and median for tenure and friend_count\nfacebook %>% summarise(tenure_avg = mean(tenure, na.rm = TRUE),\n                       tenure_med = median(tenure, na.rm = TRUE),\n                       fc_avg = mean(friend_count, na.rm = TRUE),\n                       fc_med = median(friend_count, na.rm = TRUE))\n\n# 2. Select the gender, age, and friend_count variables, group by gender, \n# and calculate mean and median\nfacebook %>%\n        select(gender, age, friend_count) %>%\n        group_by(gender) %>%\n        summarise_each(funs(mean, median))\n\n\n\n#############\n# arrange() #\n#############\n# Notes: \n\n\niris %>% arrange(Sepal.Length)\niris %>% arrange(desc(Sepal.Length))\n\n\n\n##############\n# YOUR TURN! #\n##############\n# Continuing with our facebook data...\n# 1. Group the data by age\n# 2. Calculate the median friend_count for each age\n# 3. Arrange the median calculated friend_count variable in descending order \n# to find the ages with the greatest median friend count\nfacebook %>% \n        group_by(age) %>% \n        summarise(friend_count = median(friend_count, na.rm = TRUE)) %>% \n        arrange(desc(friend_count))\n\n\n\n############\n# mutate() #\n############\n# Notes: \n\n\n# add a new variable to the iris data\niris\niris %>% mutate(Sepal.Area = Sepal.Length * Sepal.Width)\n\n# create a new variable but drop all the original columns\niris %>% transmute(Sepal.Area = Sepal.Length * Sepal.Width)\n\n# apply function to each column - in this case get the ranking of each\n# value for each variable\niris %>% mutate_each(funs(min_rank))\n\n\n\n##############\n# YOUR TURN! #\n##############\n# Continuing with our facebook data...\n# 1. Create a new variable `friend_ratio` that equals friendships_initiated / friend_count\n# 2. Find the median `friend_ratio` for males and females\nfacebook %>% \n        mutate(friend_ratio = friendships_initiated / friend_count) %>%\n        group_by(gender) %>%\n        summarise(fr_median = median(friend_ratio, na.rm = TRUE))\n\n\n\n#########\n# joins #\n#########\n# Notes: \n\n\n# there are different ways to join a and b\na\nb\n\n# left_join\nleft_join(a, b, by = \"x1\")\na %>% left_join(b)\n\n# right_join\nright_join(a, b, by = \"x1\")\na %>% right_join(b, by = \"x1\")\n\n# inner_join\ninner_join(a, b, by = \"x1\")\na %>% inner_join(b, by = \"x1\")\n\n# full_join\nfull_join(a, b, by = \"x1\")\na %>% full_join(b, by = \"x1\")\n\n# semi_join\nsemi_join(a, b, by = \"x1\")\na %>% semi_join(b, by = \"x1\")\n\n# anti_join\nanti_join(a, b, by = \"x1\")\na %>% anti_join(b, by = \"x1\")\n\n\n\n##############\n# YOUR TURN! #\n##############\n# 1. Import the reddit.csv and regions.csv files in the data folder\nreddit <- read.csv(\"data/reddit.csv\", stringsAsFactors = FALSE)\nregions <- read.csv(\"data/regions.csv\", stringsAsFactors = FALSE)\n\n\n# 2. Join the regions data to the reddit data\nreddit <- reddit %>% left_join(regions)\n\n\n\n\n\n\n\n",
    "created" : 1470595843075.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2284079366",
    "id" : "F216E8ED",
    "lastKnownWriteTime" : 1469762597,
    "last_content_update" : 1469762597,
    "path" : "~/Dropbox/Academia/University of Cincinnati/Intro to R Bootcamp/Files - teacher/6-dplyr-data-teacher.R",
    "project_path" : "Files - teacher/6-dplyr-data-teacher.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}