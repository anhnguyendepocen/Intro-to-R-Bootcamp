{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Programming\"\nsubtitle: \"Advanced Graphics with ggplot2\"\nauthor: | \n  | Brad Boehmke, Ph.D.\noutput: \n  ioslides_presentation:\n    logo: images/uc_logo2.png\n    widescreen: true\n    smaller: true\n    transition: 0.01\n---\n\n\n# Key Things to Remember\n\n## ggplot2 provides unlimited visualization customization\n\n\n<center>\n<img src=\"images/tufte_weather.png\" width=\"100%\" height=\"100%\"/>\n</center>\n\n## What to Remember from this Section\n\n`ggplot2` allows you to:\n\n\n1. Think about your graphics via layers\n2. Apply an organized grammar of graphics for visualization development\n3. ...\n\n\n## What to Remember from this Section\n\nSyntax for ggplot2 visualizations will look like:\n\n```{r, warning=FALSE, message=FALSE, fig.align='center', fig.height=3.25, fig.width=7}\nlibrary(ggplot2)\n\nggplot(data = mpg, aes(x = displ, y = hwy)) +\n        geom_point(aes(color = class)) +\n        xlab(\"Engine Displacement (liters)\") +\n        ylab(\"Highway Mileage\") +\n        ggtitle(\"Fuel Economy vs. Engine Displacement\") +\n        theme_bw()\n        \n```\n\n\n## Resources Used...\n\nLoad these packages to follow along with this tutorial\n\n```{r, eval=TRUE}\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(dplyr)\n```\n\n<br>\n\nImport the following data sets from the data folder\n\n```{r, eval=TRUE}\nsupermarket <- read_excel(\"data/Supermarket Transactions.xlsx\", sheet = \"Data\")\nfacebook <- read.delim(\"data/facebook.tsv\")\nreddit <- read.csv(\"data/reddit.csv\")\nrace <- read.csv(\"data/race-comparison.csv\")\n```\n\n\n# Fundamentals of ggplot2\n\n## First Layer is, well, boring\n\n```{r, eval=FALSE}\nggplot(data = supermarket)\nggplot(data = supermarket, aes(x = `Purchase Date`, y = Revenue))\n```\n\n\n```{r, fig.align='center', echo=FALSE, fig.width=10, fig.height=4}\nlibrary(gridExtra)\n\np1 <- ggplot(data = supermarket)\np2 <- ggplot(data = supermarket, aes(x = `Purchase Date`, y = Revenue))\n\ngrid.arrange(p1, p2, ncol = 2)\n```\n\n## Let's Add Geoms\n\nTo display the data we need to tell ggplot what to draw\n\n-----------------       ----------------------------------     \n`geom_histogram()`      histogram\n`geom_freqpoly()`       frequency polygon\n`geom_bar()`            bar chart\n`geom_point()`          scatter plot\n`geom_line()`           line chart\n`geom_boxplot()`        boxplot\n-----------------       ----------------------------------\n\n<br>\n\nCheck out all the available geoms at [docs.ggplot2.org/current](docs.ggplot2.org/current)\n\n\n# Univariate Geoms\n\n## Histogram, Frequency Polygons & Density Plots\n\n```{r, eval=FALSE}\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_histogram()\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_freqpoly()\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_density()\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(data = supermarket, aes(x = Revenue)) +\n        geom_histogram()\n\np2 <- ggplot(data = supermarket, aes(x = Revenue)) +\n        geom_freqpoly()\n\np3 <- ggplot(data = supermarket, aes(x = Revenue)) +\n        geom_density()\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n## Histogram, Frequency Polygons & Density Plots\n\n```{r, eval=FALSE}\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_histogram(bins = 100, color = \"grey40\", fill = \"white\")\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_freqpoly(bins = 100, color = \"blue\")\n\nggplot(data = supermarket, aes(x = Revenue)) +\n        geom_density(fill = \"red\", alpha = .5)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(data = supermarket, aes(x = Revenue)) +\n        geom_histogram(bins = 100, color = \"grey40\", fill = \"white\")\n\np2 <- ggplot(data = supermarket, aes(x = Revenue)) +\n        geom_freqpoly(bins = 100, color = \"blue\")\n\np3 <- ggplot(data = supermarket, aes(x = Revenue)) +\n        geom_density(fill = \"red\", alpha = .5)\n\nlibrary(gridExtra)\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n\n## Bar Chart\n\n\n```{r, eval=FALSE}\nggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\nsummary <- supermarket %>%\n        group_by(`Product Family`) %>%\n        tally()\n\nggplot(data = summary, aes(x = `Product Family`, y = n)) +\n        geom_bar(stat = \"identity\")\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=8, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\nsummary <- supermarket %>%\n        group_by(`Product Family`) %>%\n        tally()\n\np2 <- ggplot(data = summary, aes(x = `Product Family`, y = n)) +\n        geom_bar(stat = \"identity\")\n\ngrid.arrange(p1, p2, ncol = 2)\n```\n\n## Bar Chart\n```{r, eval=FALSE}\nggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\")\n\nggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\", width = .75)\n\nggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\", width = .99)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\")\n\np2 <- ggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\", width = .75)\n\np3 <- ggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar(fill = \"dodgerblue\", color = \"grey40\", width = .99)\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n\n## Your Turn\n\n<br>\n<br>\n\n<blockquote>\n<font size=\"6\">\n1. Assess the distribution of age, tenure, and gender in the `facebook` data.\n</font>\n</blockquote>\n\n<br>\n\n<blockquote>\n<font size=\"6\">\n2. Assess the frequency of age range, education, and income range in the `reddit` data. \n</font>\n</blockquote>\n\n\n# Bivariate Geoms\n\n## Scatter Plots\n\n```{r, eval=FALSE}\nggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point()\n\nggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point(colour = \"blue\", size = 1, shape = 5)\n\nggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point(colour = \"blue\", alpha = .25)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point()\n\np2 <- ggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point(colour = \"blue\", size = .5, shape = 5)\n\np3 <- ggplot(supermarket, aes(`Purchase Date`, Revenue)) +\n        geom_point(colour = \"blue\", alpha = .05)\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n## Scatter Plots: over plotting\n\n```{r, eval=FALSE}\nggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_point()\n\nggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_jitter(size = 1)\n\nggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_jitter(size = 1, alpha = .1)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_point()\n\np2 <- ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_jitter(size = 1)\n\np3 <- ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +\n        geom_jitter(size = 1, alpha = .1)\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n## Line Charts\n\n```{r, eval=FALSE}\nsales_by_date <- supermarket %>%\n        group_by(`Purchase Date`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\nggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +\n        geom_line()\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=4, warning=FALSE, message=FALSE}\nsales_by_date <- supermarket %>%\n        group_by(`Purchase Date`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\nggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +\n        geom_line()\n```\n\n## Line Charts: fitting additional lines\n\n```{r, eval=FALSE}\nsales_plot <- ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +\n        geom_line()\n\nsales_plot + geom_smooth(span = .1)\n\nsales_plot + geom_smooth(span = .9. se = FALSE)\n\nsales_plot + geom_smooth(method = \"lm\", se = FALSE)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10.5, fig.height=3.5, warning=FALSE, message=FALSE}\nsales_plot <- ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +\n        geom_line()\n\np1 <- sales_plot + geom_smooth(span = .1)\n\np2 <- sales_plot + geom_smooth(span = .9, se = FALSE)\n\np3 <- sales_plot + geom_smooth(method = \"lm\", se = FALSE)\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n## Box Plot\n\n```{r, eval=FALSE}\nggplot(supermarket, aes(factor(Children), Revenue)) +\n        geom_boxplot()\n\nggplot(supermarket, aes(factor(Children), Revenue)) +\n        geom_boxplot(notch = TRUE, fill = \"blue\", alpha = .25)\n\nggplot(supermarket, aes(factor(Children), Revenue)) +\n        geom_boxplot(outlier.color = \"red\", outlier.shape = 1)\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(supermarket, aes(factor(Children), Revenue)) +\n        geom_boxplot()\n\np2 <- ggplot(supermarket, aes(factor(Children), Revenue)) +\n        geom_boxplot(notch = TRUE)\n\np3 <- ggplot(supermarket, aes(factor(Children), Revenue)) +\n        geom_boxplot(outlier.color = \"red\", outlier.shape = 1)\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n## Box Plot: over plotting\n\nUseful for smaller data sets like `mpg`\n\n```{r, eval=FALSE}\nggplot(mpg, aes(class, hwy)) +\n        geom_boxplot()\n\nggplot(mpg, aes(class, hwy)) +\n        geom_boxplot() +\n        geom_jitter(width = .2, alpha = .5)\n\nggplot(mpg, aes(class, hwy)) +\n        geom_violin()\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(mpg, aes(class, hwy)) +\n        geom_boxplot()\n\np2 <- ggplot(mpg, aes(class, hwy)) +\n        geom_boxplot() +\n        geom_jitter(width = .2, alpha = .5)\n\np3 <- ggplot(mpg, aes(class, hwy)) +\n        geom_violin()\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n\n## Bar Chart\n\nBar charts can have a y-axis different than just counts\n\n```{r, eval=FALSE}\nggplot(supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\nprod_revenue <- supermarket %>%\n        group_by(`Product Family`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\nggplot(prod_revenue, aes(x = `Product Family`, y = Revenue)) +\n        geom_bar(stat = \"identity\")\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=8, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(data = supermarket, aes(x = `Product Family`)) +\n        geom_bar()\n\nprod_revenue <- supermarket %>%\n        group_by(`Product Family`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\np2 <- ggplot(prod_revenue, aes(x = `Product Family`, y = Revenue)) +\n        geom_bar(stat = \"identity\")\n\ngrid.arrange(p1, p2, ncol = 2)\n```\n\n\n## Your Turn\n\n<br>\n<br>\n\n<blockquote>\n<font size=\"6\">\nAssess bivariate relationships between tenure, age, gender, likes, etc. in the `facebook` data.\n</font>\n</blockquote>\n\n\n# Multivariate Capabilities\n\n## Color, Size, Shape, etc.\n\n```{r, eval=FALSE}\nggplot(supermarket, aes(Revenue, color = `Product Family`)) +\n        geom_freqpoly()\n\nggplot(data = supermarket, aes(`Product Family`, fill = Gender)) +\n        geom_bar(position = \"dodge\")\n\nggplot(supermarket, aes(`Purchase Date`, Revenue, color = Country)) +\n        geom_point()\n```\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=3, warning=FALSE, message=FALSE}\np1 <- ggplot(supermarket, aes(Revenue, color = `Product Family`)) +\n        geom_freqpoly()\n\np2 <- ggplot(data = supermarket, aes(`Product Family`, fill = Gender)) +\n        geom_bar(position = \"dodge\")\n\np3 <- ggplot(supermarket, aes(`Purchase Date`, Revenue, color = Country)) +\n        geom_point()\n\ngrid.arrange(p1, p2, p3, ncol = 3)\n```\n\n## Color, Size, Shape, etc.\n\n```{r, fig.align='center', fig.width=10, fig.height=4, warning=FALSE, message=FALSE}\nprod_revenue <- supermarket %>%\n        group_by(`Purchase Date`, `Product Family`) %>%\n        summarise(Revenue = sum(Revenue, na.rm = TRUE))\n\nggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +\n        geom_line(alpha = .2) +\n        geom_smooth(se = FALSE, span = .1)\n```\n\n\n## Facetting\n\n```{r, fig.align='center', fig.width=10, fig.height=4, warning=FALSE, message=FALSE}\nggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_line(alpha = .2) +\n        geom_smooth(se = FALSE, span = .1) +\n        facet_wrap(~ `Product Family`)\n```\n\n## Facetting\n\n```{r, eval=FALSE}\nggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_blank() +\n        facet_grid(.~ `Product Family`)\n\nggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_blank() +\n        facet_grid(`Product Family` ~.)\n```\n\n\n```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=4, warning=FALSE, message=FALSE}\np1 <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_blank() +\n        facet_grid(.~ `Product Family`)\n\np2 <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue)) +\n        geom_blank() +\n        facet_grid(`Product Family` ~.)\ngrid.arrange(p1, p2, ncol = 2)\n```\n\n## Your Turn\n\n<br>\n<br>\n\n<blockquote>\n<font size=\"6\">\nAssess multivariate relationships between tenure, age, gender, likes, etc. in the `facebook` data.\n</font>\n</blockquote>\n\n# Visualization Aesthetics\n\n## Scales, Axes and Legends\n\n```{r, eval=FALSE}\nggplot(supermarket, aes(Revenue)) +\n        geom_histogram(bins = 100, color = \"grey40\", fill = \"white\") +\n        scale_size_continuous()\n        \n```\n\n\n\n## Themes\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1468939561800.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "395727291",
    "id" : "5BCB2CB4",
    "lastKnownWriteTime" : 1469490462,
    "last_content_update" : 1469490462777,
    "path" : "~/Dropbox/Academia/University of Cincinnati/Intro to R Bootcamp/8-ggplot-students.Rmd",
    "project_path" : "8-ggplot-students.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}