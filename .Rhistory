ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "wheat2", color = "grey40", alpha = .5)
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "wheat2", color = "grey40", alpha = .5)
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "wheat2", color = "grey40", alpha = .75)
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40") +
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40")
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40")
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40") +
scale_x_continuous(breaks = seq(0, 60, by = 15))
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40") +
scale_x_continuous(breaks = seq(0, 60, by = 10))
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40") +
scale_x_continuous(limits = c(0, 60),
breaks = seq(0, 60, by = 10))
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40") +
scale_x_continuous(limits = c(0, 60), breaks = seq(0, 60, by = 10),
labels = scales::dollar) +
ggtitle("Gross Revenue per Transaction")
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point()
supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(desc(Revenue))
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(desc(Revenue))
supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
mutate(City = factor(City, levels = cty_levels$City))
supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(desc(Revenue))
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point()
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point()
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar)
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location")
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_bw()
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_classic()
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_minimal()
city_rev
tail(city_rev)
city_rev$Revenue
max(city_rev$Revenue)
city_rev
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar, breaks = seq(0, 10000, by = 2000)) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_minimal()
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar,
limits = c(0, 10000),
breaks = seq(0, 10000, by = 2000)) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_minimal()
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
geom_line() +
scale_x_continuous(labels = scales::dollar,
limits = c(0, 10000),
breaks = seq(0, 10000, by = 2000)) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_minimal()
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite")
p <- ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40")
p + theme_minimal()
p + theme_dark()
p <- ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40")
p1 <- p
p2 <- p + theme_minimal()
p3 <- p + theme_dark()
grid.arrange(p1, p2, p3, ncol = 3)
p + theme_classic()
install.packages("ggthemes")
library(ggthemes)
p + theme_economist()
p + theme_economist_white()
p + theme_tufte()
p + theme_fivethirtyeight()
p + theme_wsj()
basic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
labs(x = "x-axis title", y = "y-axis title", color = "legend title", title = "Main title")
basic
basic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
labs(x = NULL, title = "Total Historical Revenue by Product Family")
basic
basic +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12)
)
?element_text
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 12)
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.justification = c(0, 1)
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = c(0, 1))
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.justification = c(0, 1),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_x_continuous(scales::dollar) +
labs(x = NULL, color = NULL, y = NULL, title = "Total Historical Revenue by Product Family")
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.justification = c(0, 1),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_y_continuous(scales::dollar) +
labs(x = NULL, color = NULL, y = NULL, title = "Total Historical Revenue by Product Family")
basic
ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_y_continuous(scales::dollar) +
labs(x = NULL, color = NULL, y = NULL, title = "Total Historical Revenue by Product Family")
ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1)
ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_y_continuous(scales::dollar)
ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_y_continuous(labels = scales::dollar)
basic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_y_continuous(labels = scales::dollar) +
labs(x = NULL, color = NULL, y = NULL, title = "Total Historical Revenue by Product Family")
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.justification = c(0, 1),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
#legend.justification = c(0, 1),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = "top",
legend.justification = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
?legend.justification
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = c(.5, .5),
legend.justification = c(.5, .5),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = c(.5, .5),
legend.justification = c(0, .5),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = c(.5, .5),
legend.justification = c(.5, 0),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = "top",
legend.justification = c(.5, 0),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = "top",
legend.justification = c(.5, .5),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
?panel.grid.major
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major.y = element_line(colour = "grey70", size = 0.2),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
plot.title = element_text(family = "Georgia", face = "bold", size = 16),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
text = element_text(family = "Georgia"),
plot.title = element_text(face = "bold", size = 16),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()
)
basic +
theme_tufte() +
theme(
text = element_text(family = "Georgia"),
plot.title = element_text(face = "bold", size = 16),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()
)
basic +
theme_minimal() +
theme(
text = element_text(family = "Georgia"),
plot.title = element_text(face = "bold", size = 16),
legend.position = "top",
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major.y = element_line(linetype = "dashed", color = "darkgray"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()
)
?theme
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40")
rnorm(n = 100, min = 0, max = 10)
?rnorm
rnorm(n = 100, mean = 10, sd = 2)
hist(rnorm(n = 100, mean = 10, sd = 2))
facebook <- read.delim("data/facebook.tsv")
likes <- facebook$likes
likes
head(likes)
dim(likes)
class(likes)
x <- rnorm(n = 100, mean = 10, sd = 2)
class(x)
str(likes)
length(likes)
head(likes)
tail(likes, 20)
View(likes)
View(x)
likes[1:10]
likes[1]
likes[1:10]
likes[c(10, 13512, 3778, 59131)]
subset_vector <- c(10, 13512, 3778, 59131)
likes[subset_vector]
likes[c(10, 13512, 3778, 59131)]
viral <- likes >= 5000
viral
dull <- likes == 0
normal <- likes > 0 & likes < 5000
sum(viral)
sum(dull)
sum(normal)
sum(viral)/length(likes)
know_somebody <- likes != 0
which(viral)
likes[likes > 15000]
summary(likes)
View(facebook)
c(1:10, NA)
x <- c(1:10, NA)
mean(x)
mean(x, na.rm = T)
summary(likes)
mean(likes, na.rm = TRUE)
median(likes, na.rm = T)
sd(likes)
range(likes)
min(likes)
max(likes)
sum(fc == 0)
fc <- facebook$friend_count
summary(fc)
sum(fc == 0)
matrix(1:12, nrow = 3, ncol = 3)
m <- matrix(runif(12), nrow = 3)
class(m)
str(m)
length(m)
dim(m)
m[, 2, drop = FALSE]
m[, 2]
class(m[, 2])
class(m[, 2, drop = FALSE])
m > .5
sum(m > .5)
m[m > .5]
m[m > .5, drop = FALSE]
summary(m)
mean(m)
median(m)
mean(m[1, ])
apply(m, MARGIN = 1, FUN = mean)
summary(m)
fc <- facebook$friend_count
Q1 <- fc[fc > 4600]
Q2 <- matrix(Q1, nrow = 10)
dim(Q2)
Q2
l1 <- list(item1 = 1:3,
item2 = letters[1:5],
item3 = c(T, F, T, T),
item4 = matrix(1:9, nrow = 3))
l1
class(l1)
str(l1)
length(l1)
names(l1)
l1["item4"]
l1[["item4"]]
l1$item4
model$residuals
model <- lm(mpg ~ wt, data = mtcars)    # linear regression model
mode(model)
str(model)
names(model)
model["residuals"]
mean(model["residuals"])
