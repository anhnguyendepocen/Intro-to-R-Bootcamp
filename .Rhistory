plot(x = supermarket$Children, y = supermarket$Revenue, pch = 16, col = "blue")
str(supermarket)
race <- read.csv("data/race-comparison.csv")
race
View(race)
plot(x = race$White_unemployment, y = race$white_college, pch = 16, col = "blue")
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = "blue")
plot(x = race$black_unemployment, y = race$black_college, pch = 16, col = "blue")
plot(x = race$Black_unemployment, y = race$black_college, pch = 16, col = "blue")
View(race)
plot(x = race$White_hs, y = race$Black_hs, pch = 16, col = "blue")
plot(x = race$white_college, y = race$black_college, pch = 16, col = "blue")
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = "blue")
par(mfrow = c(1, 2))
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = "blue")
plot(x = race$Black_unemployment, y = race$black_college, pch = 16, col = "blue")
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16)
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 18)
?pch
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 20)
attach(race)
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
lines(lowess(White_unemployment ~ Black_unemployment), col = "blue")
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
lines(lowess(White_unemployment ~ Black_unemployment), col = "blue")
par(mfrow = c(1,1))
attach(race)
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
abline(lm(White_unemployment ~ Black_unemployment), col="red")
attach(race)
lm(White_unemployment ~ Black_unemployment)
abline(lm(White_unemployment ~ Black_unemployment))
lines(lm(White_unemployment ~ Black_unemployment))
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
plot.new()
attach(race)
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
plot.new()
plot(x = White_unemployment, y = Black_unemployment, data = race, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment, data = race), col = "red")
plot.new()
warnings()
plot(mtcars$mpg ~ mtcars$wt)
abline(lm(mpg~wt, data = mtcars))
plot.new()
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment, data = race), col = "red")
plot.new()
plot(x = race$White_unemployment, y = race$Black_unemployment)
abline(lm(White_unemployment ~ Black_unemployment, data = race))
lines(lowess(White_unemployment ~ Black_unemployment), col = "blue")
?lowess
lm(race$White_unemployment ~ race$Black_unemployment)
plot(x = White_unemployment ~ Black_unemployment, data = race)
plot(mpg ~ wt, data=mtcars)
plot(White_unemployment ~ Black_unemployment, data = race)
abline(lm(White_unemployment ~ Black_unemployment, data = race))
lines(lowess(White_unemployment ~ Black_unemployment, data = race), col = "blue")
lines(lowess(race$White_unemployment ~ race$Black_unemployment), col = "blue")
pairs(race)
race <- read.csv("data/race-comparison.csv")
head(race)
plot(x = race$Year, y = race$White_unemployment, type = "l")
plot(x = race$Year, y = race$White_unemployment, type = "b")
plot(x = race$Year, y = race$White_unemployment, type = "s")
plot(x = race$Year, y = race$black_college, type = "l")
plot(x = race$Year, y = race$black_college, type = "b")
plot(x = race$Year, y = race$black_college, type = "s")
plot(x = race$Year, y = race$black_college, type = "l")       # initial plot
lines(x = race$Year, y = race$Black_hs, col = "red")  # add points to second line
plot(x = race$Year, y = race$Black_hs, type = "l")       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
plot(x = race$Year, y = race$Black_hs, type = "l", xlim = c(0, max(race$Black_hs)))       # initial plot
plot(x = race$Year, y = race$Black_hs, type = "l", xlim = c(0, 70))       # initial plot
plot(x = race$Year, y = race$Black_hs, type = "l", xlim = c(0, 100))       # initial plot
plot(x = race$Year, y = race$Black_hs, type = "l", ylim = c(0, max(race$Black_hs)))       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
lines(x = race$Year, y = race$Black_unemployment, col = "blue", lty = 2)
legend()
?legend
legend(x = min(race$Year))
legend(x = min(race$Year), legend = c("HS Rate", "College Rate", "Unemployment"))
plot(x = race$Year, y = race$Black_hs, type = "l", ylim = c(0, max(race$Black_hs)))       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
lines(x = race$Year, y = race$Black_unemployment, col = "blue", lty = 2)
legend(x = min(race$Year), legend = c("HS Rate", "College Rate", "Unemployment"))
legend("topleft", legend = c("HS Rate", "College Rate", "Unemployment"))
legend("topleft", legend = c("HS Rate", "College Rate", "Unemployment"), col = c("black", "red", "blue"))
plot(x = race$Year, y = race$Black_hs, type = "l", ylim = c(0, max(race$Black_hs)))       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
lines(x = race$Year, y = race$Black_unemployment, col = "blue", lty = 2)
legend("topleft", legend = c("HS Rate", "College Rate", "Unemployment"), col = c("black", "red", "blue"), lty = c(1, 1, 2))
plot(x = race$Year, y = race$Black_unemployment, type = "b")
library(readxl)
supermarket <- read_excel("data/Supermarket Transactions.xlsx")
supermarket <- read_excel("data/Supermarket Transactions.xlsx", sheet = "Data")
View(supermarket)
boxplot(supermarket$Revenue)
str(supermarket)
boxplot(Revenue ~ Gender, data = supermarket)
boxplot(Revenue ~ `Marital Status`, data = supermarket)
boxplot(Revenue ~ Children, data = supermarket)
boxplot(Revenue ~ `Product Family`, data = supermarket)
boxplot(Revenue ~ `Product Family` + Children, data = supermarket)
boxplot(Revenue ~ `Product Department`, data = supermarket)
boxplot(Revenue ~ `Product Category`, data = supermarket)
boxplot(Revenue ~ `Gender`, data = supermarket)
boxplot(Revenue ~ `Gender` + `Marital Status`, data = supermarket)
View(supermarket)
plot(supermarket$`Purchase Date`, supermarket$Revenue)
table(supermarket$Children, supermarket$`Marital status`)
table(supermarket$Children, supermarket$`Marital Status`)
counts <- table(supermarket$Children, supermarket$`Marital Status`)
barplot(table(reddit$dog.cat))
barplot(counts)
counts <- table(supermarket$`Marital Status`, supermarket$Children)
barplot(counts)
names(counts)
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"))
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
counts <- table(supermarket$`Marital Status`, supermarket$Children, supermarket$Gender)
counts
barplot(counts, col = c("darkblue", "red", "green"), beside = TRUE)
barplot(counts)
str(supermarket)
counts <- table(supermarket$`Product Family`, supermarket$Homeowner)
barplot(counts)
table(supermarket$`Annual Income`, supermarket$Gender)
barplot(table(supermarket$`Annual Income`, supermarket$Gender))
barplot(table(supermarket$`Annual Income`, supermarket$`Marital Status`))
barplot(table(supermarket$`Annual Income`, supermarket$Homeowner))
barplot(table(supermarket$`Annual Income`, supermarket$Homeowner), beside = TRUE)
barplot(table(supermarket$Country, supermarket$Gender), beside = TRUE)
table(supermarket$Country, supermarket$Gender)
stripchart(mtcars$mpg)
hist()
facebook <- read.delim("data/facebook.tsv")
x <- na.omit(facebook$tenure)
h <- hist(x, breaks = 100, col = "grey", main = "Facebook User Tenure",
xlab = "Tenure (Days)")
xfit <- seq(min(x), max(x), length = 100)
yfit <- dnorm(xfit, mean = mean(x), sd = sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
h$mids[1:2]
h$mids
list(mids)
str(h)
lines(xfit, yfit, col = "red", lwd = 2)
d <- density(facebook$tenure, na.rm = TRUE)
polygon(d, col = "red", border = "blue")
plot(d, main = "Kernel Density of Tenure")
polygon(d, col = "red", border = "blue")
boxplot(mtcars$mpg, notch = TRUE)
points(mean(mtcars$mpg), pch=18, col = "red")
?abline
names(race)
pairs(race[, c("White_unemployment", "Black_unemployment",
"white_college", "black_college")])
plot(x = race$Year, y = race$black_college)
library(dplyr)
reddit <- read.csv("data/reddit.csv")
head(reddit)
head(supermarket)
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
counts <- table(supermarket$`Marital Status`, supermarket$Children)
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"))
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
proportions <- prop.table(counts)
proportions
barplot(proportions, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
install.packages("gdata")
install.packages(c("XLConnect", "xlsx", "foreign", "readr", "readxl", "dplyr", "tidyr", "stringr", "lubridate"))
install.packages("ggplot2", "ggvis", "leaflet", "dygraphs", "DT", "diagrammeR", "threeJS", "googleVis")
install.packages("ggplot2", "leaflet", "dygraphs", "DT", "diagrammeR", "threeJS", "googleVis")
install.packages("ggplot2")
install.packages("htmlwidgets")
install.packages(c("leaflet", "dygraphs", "DT", "diagrammeR", "threeJS)")
install.packages(c("leaflet", "dygraphs", "DT", "diagrammeR", "threeJS"))
install.packages("googleVis")
install.packages(c("car", "mgcv", "lme4", "nlme", "randomForest"))
install.packages(c("multcomp", "vcd", "glmnet", "survival", "caret", "shiny", "xtable"))
install.packages(c("maps", "ggmap", "zoo", "xts", "quantmod", "Rcpp", "data.table", "parallel", "XML", "jsonlite", "httr", "testhat", "roxygen2"))
install.packages(c("maps", "ggmap", "zoo", "xts", "quantmod",
"Rcpp", "data.table", "parallel", "XML", "jsonlite", "httr", "testhat", "roxygen2"))
install.packages("bookdown")
install.packages("magrittr")
install.packages("rvest")
install.packages(c("moments", "outliers"))
install.packages(c("psych", "pastecs"))
install.packages(c("gridExtra", "corrgram", "corrplot", "Hmisc", "ppcor"))
?cor
vignette(package = "stats")
library(tidyr)
?gather
ggplot(data = mpg, aes(x = hwy)) +
geom_histogram(bins = 25, color = "grey30", fill = "white")
library(ggplot2)
ggplot(data = mpg, aes(x = hwy)) +
geom_histogram(bins = 25, color = "grey30", fill = "white")
mpg
ggplot(data = mpg, aes(x = hwy, y = mpg, col = cyl) +
geom_point()
ggplot(data = mpg, aes(x = hwy, y = mpg, col = cyl)) +
geom_point()
ggplot(data = mpg, aes(x = hwy, y = mpg)) +
geom_point()
head(mpg)
ggplot(data = mpg, aes(x = hwy, y = cty)) +
geom_point()
ggplot(data = mpg, aes(x = hwy, y = cty)) +
geom_jitter()
?ggplot
ggplot(data = mpg, aes(x = hwy, y = cty), color = manufacturer) +
geom_jitter()
ggplot(data = mpg, aes(x = hwy, y = cty, color = manufacturer) +
geom_jitter()
ggplot(data = mpg, aes(x = hwy, y = cty, color = manufacturer)) +
geom_jitter()
ggplot(data = mpg, aes(x = hwy, y = cty, color = cyl)) +
geom_jitter()
ggplot(data = mpg, aes(x = hwy, y = cty, color = compact)) +
geom_jitter()
ggplot(data = mpg, aes(x = hwy, y = cty, color = class)) +
geom_jitter()
?mpg
ggplot(data = mpg, aes(x = hwy, y = cty, color = class)) +
geom_jitter() +
xlab("Highway Mileage") +
ylab("City Mileage") +
ggtitle("Fuel Economy")
ggplot(data = mpg, aes(x = hwy, y = cty, color = class)) +
geom_jitter() +
geom_smooth() +
xlab("Highway Mileage") +
ylab("City Mileage") +
ggtitle("Fuel Economy for 38 Popular Car Models")
ggplot(data = mpg, aes(x = hwy, y = cty)) +
geom_jitter(color = class) +
geom_smooth() +
xlab("Highway Mileage") +
ylab("City Mileage") +
ggtitle("Fuel Economy for 38 Popular Car Models")
ggplot(data = mpg, aes(x = hwy, y = cty)) +
geom_jitter(aes(color = class)) +
geom_smooth() +
xlab("Highway Mileage") +
ylab("City Mileage") +
ggtitle("Fuel Economy for 38 Popular Car Models")
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_jitter(aes(color = class)) +
geom_smooth() +
xlab("Highway Mileage") +
ylab("City Mileage") +
ggtitle("Fuel Economy for 38 Popular Car Models")
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_jitter(aes(color = class)) +
geom_smooth(se = FALSE) +
xlab("Highway Mileage") +
ylab("City Mileage") +
ggtitle("Fuel Economy for 38 Popular Car Models")
ggplot(diamonds, aes(carat, price)) + geom_point()
library(readxl)
supermarket <- read_excel("data/Supermarket Transactions.xlsx")
supermarket <- read_excel("data/Supermarket Transactions.xlsx", sheet = "Data")
View(supermarket)
ggplot(data = supermarket, aes(x = `Purchase Date`, y = Revenue))
ggplot(data = supermarket, aes(x = `Purchase Date`, y = Revenue)) + geom_point()
ggplot(data = supermarket, aes(x = `Purchase Date`, y = Revenue)) + geom_point(alpha = .5)
ggplot(data = supermarket, aes(x = `Purchase Date`, y = Revenue)) + geom_point(alpha = .25)
facebook <- read.delim("data/facebook.tsv")
head(facebook)
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_density()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_freqpoly()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100)
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100, color = "grey40", fill = "white")
ggplot(data = supermarket, aes(x = Revenue)) +
geom_freqpoly(bins = 100, color = "grey40", fill = "white")
ggplot(data = supermarket, aes(x = Revenue)) +
geom_freqpoly(bins = 100, color = "blue")
ggplot(data = supermarket, aes(x = Revenue)) +
geom_freqpoly(bins = 100, color = "dodgerblue")
geom_freqpoly()
?geom_freqpoly()
?geom_density
ggplot(data = supermarket, aes(x = Revenue)) +
geom_density(fill = "red", alpha = .5)
ggplot(data = supermarket, aes(x = Children)) +
geom_bar()
ggplot(data = supermarket, aes(x = factor(Children))) +
geom_bar()
ggplot(data = supermarket, aes(x = `Product Family`)) +
geom_bar()
geom_bar
?geom_bar
str(supermarket)
ggplot(data = supermarket, aes(x = `Units Sold`)) +
geom_bar()
ggplot(data = supermarket, aes(x = `Annual Income`)) +
geom_bar()
ggplot(data = supermarket, aes(x = sort(table(`Units Sold`)))) +
geom_bar()
ggplot(data = supermarket, aes(x = sort(table(`Units Sold`)))) +
geom_bar(stat = "identity")
table(supermarket$`Product Family`)
ggplot(data = supermarket, aes(x = table(supermarket$`Product Family`))) +
geom_bar(stat = "identity")
str(table(supermarket$`Product Family`))
library(dplyr)
supermarket %>%
group_by(`Product Family`) %>%
tally()
summary <- supermarket %>%
group_by(`Product Family`) %>%
tally()
ggplot(data = summary, aes(x = n)) +
geom_bar()
ggplot(data = summary, aes(x = `Product Family`, y = n)) +
geom_bar(stat = "identity")
ggplot(data = supermarket, aes(x = `Product Family`)) +
geom_bar(color = "grey40", fill = "white")
ggplot(data = supermarket, aes(x = `Product Family`)) +
geom_jitter()
head(facebook)
ggplot(facebook, aes(age)) + geom_histogram()
ggplot(facebook, aes(age)) + geom_boxplot()
?geom_dotplot
ggplot(data = supermarket, aes(x = `Product Family`)) +
geom_dotplot()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_dotplot()
reddit <- read.csv("data/reddit.csv")
str(reddit)
race <- read.csv("data/race-comparison.csv")
ggplot(race, aes(White_unemployment, Black_unemployment)) +
geom_point()
ggplot(race, aes(White_unemployment, Black_unemployment)) +
geom_point()
ggplot(race, aes(White_unemployment, Black_unemployment)) +
geom_jitter()
View(race)
View(facebook)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point()
?geom_point
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point()
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "pink", size = 2)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", size = 1)
?shape
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", size = 1, shape = 5)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", size = 1, alpha = .25)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", alpha = .25)
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100, color = "grey40", fill = "white")
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100, color = "grey40", fill = "white", alpha = .5)
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100, color = "grey40", fill = "white") + geom_freqpoly()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100, color = "grey40", fill = "white") + geom_freqpoly(bins = 100)
ggplot(facebook, (age, tenure)) + geom_point()
ggplot(facebook, aes(age, tenure)) + geom_point()
ggplot(facebook, aes(age, tenure)) + geom_point(alpha = .25)
ggplot(facebook, aes(age, tenure)) + geom_point(alpha = .1)
ggplot(facebook, aes(age, tenure)) + geom_point(alpha = .05)
ggplot(facebook, aes(age, tenure)) + geom_jitter(alpha = .05)
ggplot(facebook, aes(age, tenure)) + geom_jitter()
ggplot(facebook, aes(age, tenure)) + geom_point()
ggplot(race, aes(White_unemployment, Black_unemployment)) +
geom_point()
ggplot(race, aes(White_unemployment, Black_unemployment)) +
geom_point(colour = "blue", alpha = .25)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point()
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", alpha = .25)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", size = .5, shape = 5)
View(reddit)
View(supermarket)
ggplot(supermarket, aes(`Units Sold`, Revenue)) +
geom_point(colour = "blue", size = .5, shape = 5)
ggplot(supermarket, aes(`Units Sold`, Revenue)) +
geom_point()
ggplot(supermarket, aes(`Units Sold`, Revenue)) +
geom_point()
ggplot(supermarket, aes(`Units Sold`, Revenue)) +
geom_jitter()
ggplot(supermarket, aes(`Units Sold`, Revenue)) +
geom_jitter(alpha = .25)
ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +
geom_point()
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
sales_by_date <- supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line()
?geom_smooth
ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line() +
geom_smooth()
ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line() +
geom_smooth(span = .1)
ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line() +
geom_smooth(span = 1)
sales_plot <- ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line() +
sales_plot + geom_smooth(method = "lm")
sales_plot <- ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line()
sales_plot + geom_smooth(method = "lm")
str(supermarket)
ggplot(sales_by_date, aes(`Product Family`, Revenue)) +
geom_boxplot()
ggplot(supermarket, aes(`Product Family`, Revenue)) +
geom_boxplot()
ggplot(supermarket, aes(`Product Category`, Revenue)) +
geom_boxplot()
unique(supermarket$`State or Province`)
unique(supermarket$`Marital Status`)
unique(supermarket$Children)
ggplot(supermarket, aes(Children, Revenue)) +
geom_boxplot()
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot()
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot() +
geom_jitter(alpha = .1)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot() +
geom_jitter(alpha = .05)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot() +
geom_point(alpha = .05)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot() +
geom_point(alpha = .01)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot() +
geom_jitter(alpha = .01)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot(varwidth = TRUE)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot(outlier.color = "red", outlier.shape = 1, alpha = .5)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot(notch = TRUE, fill = "blue")
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot(notch = TRUE, fill = "blue", alpha = .5)
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot(notch = TRUE, fill = "blue", alpha = .25)
mpg
ggplot(mpg, aes(class, hwy)) +
geom_boxplot()
ggplot(supermarket, aes(factor(Children), Revenue)) +
geom_boxplot() + geom_jitter(width = .2, alpha = .1)
ggplot(mpg, aes(class, hwy)) +
geom_boxplot() +
geom_jitter(width = .2)
ggplot(mpg, aes(class, hwy)) +
geom_boxplot() +
geom_jitter(width = .2, alpha = .5)
ggplot(mpg, aes(class, hwy)) +
geom_boxplot() +
geom_dotplot()
ggplot(mpg, aes(class, hwy)) +
geom_violin()
ggplot(mpg, aes(class, hwy)) +
geom_boxplot() +
geom_jitter(width = .2, alpha = .5)
ggplot(mpg, aes(cyl, hwy)) +
geom_boxplot() +
geom_jitter(width = .2, alpha = .5)
ggplot(mpg, aes(factor(cyl), hwy)) +
geom_boxplot() +
geom_jitter(width = .2, alpha = .5)
ggplot(mpg, aes(factor(cyl), hwy)) +
geom_violin()
ggplot(data = supermarket, aes(x = `Product Family`, y = Revenue)) +
geom_bar()
prod_revenue <- supermarket %>%
group_by(`Product Family`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
ggplot(prod_revenue, aes(x = `Product Family`, y = Revenue)) +
geom_bar(stat = "identity")
reddit %>% group_by(age.range, marital.status) %>% tally()
