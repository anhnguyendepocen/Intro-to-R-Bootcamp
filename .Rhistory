plot(mtcars$wt, mtcars$mpg)
abline(lm(mpg~wt))
abline(lm(mtcars$wt ~ mtcars$mpg))
plot(mtcars$wt, mtcars$mpg)
abline(lm(mtcars$wt ~ mtcars$mpg))
title("Regression of MPG on Weight")
plot(mtcars$wt, mtcars$mpg)
abline(lm(mtcars$wt~mtcars$mpg))
title("Regression of MPG on Weight")
?abline
plot(mtcars$wt, mtcars$mpg)
abline(lm(wt ~ mpg, data = mtcars))
title("Regression of MPG on Weight")
abline(lm(wt ~ mpg))
?attach
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
hist(mtcars$mpg, breaks = 10, col = "grey40")
hist(mtcars$mpg, breaks = 10, col = "grey")
density(mtcars$mpg)
hist(mtcars$mpg, breaks = 10, col = "grey")
hist(mtcars$mpg, breaks = 10, col = "grey", freq = FALSE)
hist(mtcars$mpg, breaks = 10, col = "grey")
?hist
hist(mtcars$mpg, breaks = 10, col = "grey", freq = FALSE)
counts <- table(mtcars$gear)
barplot(counts, main="Car Distribution", xlab="Number of Gears")
barplot(counts, main="Car Distribution", xlab="Number of Gears", col = "blue")
dotchart(mtcars$mpg)
dotchart(mtcars$mpg,labels=row.names(mtcars),cex=.7)
x <- mtcars[order(mtcars$mpg),]
dotchart(x$mpg,labels = row.names(mtcars), cex = .7)
facebook <- read.delim("data/facebook.tsv")
str(facebook)
reddit <- read.csv("data/reddit.csv")
str(reddit)
ed <- table(reddit$education)
ed
barplot(ed)
barplot(ed)
barplot(ed, srt = 45)
barplot(ed)
barplot(ed, horiz = TRUE)
par(las=2)
barplot(ed, horiz = TRUE)
par(las=2)
par(mar=c(8,8,1,1))
barplot(ed, horiz = TRUE)
par(las=2)
par(mar=c(8,8,1,5))
barplot(ed, horiz = TRUE)
par(las=2)
par(mar=c(1,10,1,1))
barplot(ed, horiz = TRUE)
par(las=2)
par(mar=c(5,15,1,1))
barplot(ed, horiz = TRUE)
par(las=2)
par(mar=c(5,12,1,1))
barplot(ed, horiz = TRUE)
par(las=2)
par(mar=c(5,15,1,1))
barplot(ed, horiz = TRUE)
par(las=2)
par(mar = c(5,15,1,1), las = 2)
ed <- table(reddit$education)
barplot(ed, horiz = TRUE)
plot(mtcars$mpg, type = "p")
plot(mtcars$mpg, type = "p", horizontal = TRUE)
plot(x = mtcars$mpg, type = "p", horizontal = TRUE)
plot(x = mtcars$mpg, type = "p")
stripchart(mtcars$mpg)
stripchart(mtcars$mpg, pch = 16)
stripchart(mtcars$mpg, method = "stack")
stripchart(mtcars$cyl, method = "stack")
mtcars
stripchart(mtcars$carb, method = "stack")
stripchart(mtcars$mpg, pch = 16)
read.delim("data/facebook.tsv")
facebook <- read.delim("data/facebook.tsv")
stripchart(facebook$age, pch = 16)
boxplot(facebook$age)
boxplot(facebook$age, horizontal = TRUE)
stripchart(facebook$tenure, pch = 16)
boxplot(facebook$tenure, horizontal = TRUE)
hist(facebook$tenure)
hist(facebook$tenure, breaks = 100)
plot(density(facebook$tenure))
plot(density(facebook$tenure, na.rm = TRUE))
summary(facebook$tenure)
boxplot(facebook$tenure)
boxplot(facebook$tenure, horizontal = TRUE)
data()
AirPassengers
presidents
sunspot.year
trees
women
precip
lynx
beaver1
stripchart(beaver1$temp, pch = 16)
stripchart(beaver2$temp, pch = 16)
crimtab
VADeaths
UKgas
LakeHuron
BJsales
BJsales.lead
BOD
CO2
sleep
stack.x
warpbreaks
uspop
economics
stripchart(mtcars$mpg, pch = 16)
stripchart(beaver1$temp, pch = 16)
library(readxl)
pew <- read_excel("data/PEW Middle Class Data.xlsx", sheet = "3. Median HH income, metro", skip = 5)
pew
pew <- na.omit(pew)
stripchart(pew$All_2014, pch = 16)
hist(pew$All_2014)
?read_excel
hist(pew$All_2014)
boxplot(pew$All_1999)
boxplot(pew$All_1999, horizontal = TRUE)
plot(density(facebook$tenure, na.rm = TRUE))
stripchart(facebook$tenure, pch = 16)
hist(facebook$tenure)
hist(facebook$tenure, breaks = 100, col = "grey")
hist(facebook$age, breaks = 100, col = "grey")
hist(facebook$dob_year, breaks = 100, col = "grey")
hist(facebook$dob_day, breaks = 100, col = "grey")
hist(facebook$www_likes_received, breaks = 100, col = "grey")
hist(log(facebook$www_likes_received), breaks = 100, col = "grey")
plot(density(facebook$tenure))
plot(density(facebook$tenure, na.rm = TRUE))
plot(density(facebook$tenure, na.rm = TRUE))
par(mfrow = c(1, 2), mar = c(5,3,1,1))
plot(density(facebook$tenure, na.rm = TRUE), main = "Kernel Density of Tenure")
plot(density(facebook$tenure, na.rm = TRUE), main = "Kernel Density of Tenure")
polygon(density(facebook$tenure, na.rm = TRUE), col = "red", border = "blue")
?summary
vioplot(facebook$tenure, horizontal = TRUE)
boxplot(facebook$tenure, horizontal = TRUE)
boxplot(facebook$tenure, horizontal = TRUE, notch = TRUE)
boxplot(facebook$tenure, horizontal = TRUE, notch = TRUE)
par(mfrow = c(1, 1))
boxplot(facebook$tenure, horizontal = TRUE, notch = TRUE)
boxplot(mtcars$mpg, horizontal = TRUE, notch = TRUE)
boxplot(mtcars$mpg, horizontal = TRUE, notch = TRUE, col = "grey40")
points(mean(mtcars$mpg))
boxplot(mtcars$mpg, horizontal = TRUE, notch = TRUE)
points(mean(mtcars$mpg))
points(mean(mtcars$mpg), pch=18, col = "red")
boxplot(mtcars$mpg, horizontal = TRUE)
boxplot(mtcars$mpg)
points(mean(mtcars$mpg), pch=18, col = "red")
boxplot(mtcars$mpg)
boxplot(mtcars$mpg, notch = TRUE)
points(mean(mtcars$mpg), pch=18, col = "red")
View(facebook)
boxplot(facebook$dob_year)
reddit <- read.csv("data/reddit.csv", stringsAsFactors = FALSE)
str(reddit)
unique(reddit$children)
unique(reddit$country)
unique(reddit$military.service)
summary(reddit)
reddit <- read.csv("data/reddit.csv")
str(reddit)
table(reddit$dog.cat)
barplot(table(reddit$dog.cat))
pets <- table(reddit$dog.cat)
barplot(pets, main = "Animals Reddit Users Like", col = "blue")
barplot(pets, main = "Animals Reddit Users Like", col = "cyan")
barplot(pets, main = "Reddit User Animal Preferences", horiz = TRUE, names.arg = c("Cats", "Dogs", "Turtles"))
par(las = 2)
barplot(pets, main = "Reddit User Animal Preferences", horiz = TRUE, names.arg = c("Cats", "Dogs", "Turtles"))
barplot(pets, main = "Reddit User Animal Preferences", col = "cyan")
par(las = 1)
barplot(pets, main = "Reddit User Animal Preferences", horiz = TRUE, names.arg = c("Cats", "Dogs", "Turtles"))
dotchart(reddit$cheese)
reddit$cheese
str(reddit)
table(reddit$cheese)
barplot(table(reddit$cheese))
barplot(table(reddit$cheese), horiz = TRUE)
barplot(table(reddit$state), horiz = TRUE)
dotchart(reddit$state)
dotchart(table(reddit$state))
table(reddit$state)
table(reddit$state, na.rm = TRUE)
table(na.omit(reddit$state))
summary(reddit$state)
unique(reddit$state)
summary(as.character(reddit$state))
unique(as.character(reddit$state))
reddit$state == ""
subset(reddit$state, reddit$state != "")
table(reddit$state)
data.frame(table(reddit$state))
barplot(table(reddit$state))
barplot(table(reddit$state), horiz = TRUE)
dotchart(mtcars$mpg, labels = row.names(mtcars), cex = .7)
order(table(reddit$state))
View(reddit)
library(dplyr)
reddit %>%
select(state) %>%
mutate(n = n())
reddit %>%
group_by(state) %>%
mutate(n = n())
barplot(table(reddit$state), horiz = TRUE)
table(reddit$state)
state <- subset(reddit$state, reddit$state != "")
state <- as.character(subset(reddit$state, reddit$state != ""))
state
table(state)
order(table(state))
state[order(table(state))]
?order
order(table(state), descreasing = TRUE)
mtcars$mpg
str(mtcars)
data.frame(table(state))
data.frame(table(state)) %>% arrange(desc(Freq))
barchart(data.frame(table(state)) %>% arrange(desc(Freq))$Freq)
barplot(data.frame(table(state)) %>% arrange(desc(Freq))$Freq)
state <- data.frame(table(state)) %>% arrange(desc(Freq))
barplot(state$Freq, horiz = TRUE)
state <- data.frame(table(state)) %>% arrange(Freq)
barplot(state$Freq, horiz = TRUE)
state <- as.character(subset(reddit$state, reddit$state != ""))
state <- data.frame(table(state)) %>% arrange(Freq)
barplot(state$Freq, horiz = TRUE)
state <- as.character(subset(reddit$state, reddit$state != ""))
state <- data.frame(table(state), row.names = names(state)) %>% arrange(Freq)
barplot(state$Freq, horiz = TRUE)
state
state <- as.character(subset(reddit$state, reddit$state != ""))
names(state)
state$names
attributes(state)
state
str(reddit)
reddit %>%
tally(state)
?tally
reddit %>%
group_by(state)
tally()
reddit %>%
group_by(state)
tally(id)
tally(reddit$state)
tally(as.character(reddit$state))
reddit %>%
group_by(state)
count(id)
reddit %>%
group_by(state) %>%
count(id)
reddit %>%
group_by(state) %>%
tally()
reddit %>%
group_by(state) %>%
tally() %>%
filter(state != "")
row.names(state) <- state$state
reddit %>%
group_by(state) %>%
tally() %>%
filter(state != "") %>%
arrange(n)
state <- reddit %>%
group_by(state) %>%
tally() %>%
arrange(n)
row.names(state) <- state$state
barplot(state$Freq, horiz = TRUE)
state$Freq
state <- reddit %>%
group_by(state) %>%
tally() %>%
arrange(n)
row.names(state) <- state$state
state$state
state$n
barplot(state$n, horiz = TRUE)
barplot(state$n, horiz = TRUE, names.arg = state$state)
par(mar = c(3,5,1,1))
barplot(state$n, names.arg = state$state, horiz = TRUE)
par(mar = c(3,10,1,1))
barplot(state$n, names.arg = state$state, horiz = TRUE)
par(mar = c(3,7,1,1))
barplot(state$n, names.arg = state$state, horiz = TRUE)
par(mar = c(3,8,1,1))
barplot(state$n, names.arg = state$state, horiz = TRUE)
reddit %>%
group_by(state) %>%
tally() %>%
arrange(n)
reddit %>%
group_by(state) %>%
tally()
state <- reddit %>%
group_by(state) %>%
tally() %>%
arrange(n) %>%
filter(state != "")
state
dotchart(state$n,labels = state$state, cex = .7)
str(reddit)
table(reddit$cheese)
stem(mtcars$mpg)
stem(facebook$dob_day)
?stem
stem(islands)
pew$All_2014
stem(pew)
stem(pew$All_2014)
summary(pew$All_2014)
library(readxl)
?read_excel
head(read_excel("data/Supermarket Transactions.xlsx", sheet = "data"))
head(read_excel("data/Supermarket Transactions.xlsx", sheet = "Data"))
supermarket <- read_excel("data/Supermarket Transactions.xlsx", sheet = "Data")
plot(x = supermarket$`Units Sold`, y = supermarket$Revenue, pch = 16, col = "blue")
View(supermarket)
plot(x = supermarket$Children, y = supermarket$Revenue, pch = 16, col = "blue")
str(supermarket)
race <- read.csv("data/race-comparison.csv")
race
View(race)
plot(x = race$White_unemployment, y = race$white_college, pch = 16, col = "blue")
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = "blue")
plot(x = race$black_unemployment, y = race$black_college, pch = 16, col = "blue")
plot(x = race$Black_unemployment, y = race$black_college, pch = 16, col = "blue")
View(race)
plot(x = race$White_hs, y = race$Black_hs, pch = 16, col = "blue")
plot(x = race$white_college, y = race$black_college, pch = 16, col = "blue")
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = "blue")
par(mfrow = c(1, 2))
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16, col = "blue")
plot(x = race$Black_unemployment, y = race$black_college, pch = 16, col = "blue")
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 16)
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 18)
?pch
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 20)
attach(race)
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
lines(lowess(White_unemployment ~ Black_unemployment), col = "blue")
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
lines(lowess(White_unemployment ~ Black_unemployment), col = "blue")
par(mfrow = c(1,1))
attach(race)
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
abline(lm(White_unemployment ~ Black_unemployment), col="red")
attach(race)
lm(White_unemployment ~ Black_unemployment)
abline(lm(White_unemployment ~ Black_unemployment))
lines(lm(White_unemployment ~ Black_unemployment))
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
plot.new()
attach(race)
plot(x = White_unemployment, y = Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment), col = "red")
plot.new()
plot(x = White_unemployment, y = Black_unemployment, data = race, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment, data = race), col = "red")
plot.new()
warnings()
plot(mtcars$mpg ~ mtcars$wt)
abline(lm(mpg~wt, data = mtcars))
plot.new()
plot(x = race$White_unemployment, y = race$Black_unemployment, pch = 20)
abline(lm(White_unemployment ~ Black_unemployment, data = race), col = "red")
plot.new()
plot(x = race$White_unemployment, y = race$Black_unemployment)
abline(lm(White_unemployment ~ Black_unemployment, data = race))
lines(lowess(White_unemployment ~ Black_unemployment), col = "blue")
?lowess
lm(race$White_unemployment ~ race$Black_unemployment)
plot(x = White_unemployment ~ Black_unemployment, data = race)
plot(mpg ~ wt, data=mtcars)
plot(White_unemployment ~ Black_unemployment, data = race)
abline(lm(White_unemployment ~ Black_unemployment, data = race))
lines(lowess(White_unemployment ~ Black_unemployment, data = race), col = "blue")
lines(lowess(race$White_unemployment ~ race$Black_unemployment), col = "blue")
pairs(race)
race <- read.csv("data/race-comparison.csv")
head(race)
plot(x = race$Year, y = race$White_unemployment, type = "l")
plot(x = race$Year, y = race$White_unemployment, type = "b")
plot(x = race$Year, y = race$White_unemployment, type = "s")
plot(x = race$Year, y = race$black_college, type = "l")
plot(x = race$Year, y = race$black_college, type = "b")
plot(x = race$Year, y = race$black_college, type = "s")
plot(x = race$Year, y = race$black_college, type = "l")       # initial plot
lines(x = race$Year, y = race$Black_hs, col = "red")  # add points to second line
plot(x = race$Year, y = race$Black_hs, type = "l")       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
plot(x = race$Year, y = race$Black_hs, type = "l", xlim = c(0, max(race$Black_hs)))       # initial plot
plot(x = race$Year, y = race$Black_hs, type = "l", xlim = c(0, 70))       # initial plot
plot(x = race$Year, y = race$Black_hs, type = "l", xlim = c(0, 100))       # initial plot
plot(x = race$Year, y = race$Black_hs, type = "l", ylim = c(0, max(race$Black_hs)))       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
lines(x = race$Year, y = race$Black_unemployment, col = "blue", lty = 2)
legend()
?legend
legend(x = min(race$Year))
legend(x = min(race$Year), legend = c("HS Rate", "College Rate", "Unemployment"))
plot(x = race$Year, y = race$Black_hs, type = "l", ylim = c(0, max(race$Black_hs)))       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
lines(x = race$Year, y = race$Black_unemployment, col = "blue", lty = 2)
legend(x = min(race$Year), legend = c("HS Rate", "College Rate", "Unemployment"))
legend("topleft", legend = c("HS Rate", "College Rate", "Unemployment"))
legend("topleft", legend = c("HS Rate", "College Rate", "Unemployment"), col = c("black", "red", "blue"))
plot(x = race$Year, y = race$Black_hs, type = "l", ylim = c(0, max(race$Black_hs)))       # initial plot
lines(x = race$Year, y = race$black_college, col = "red")  # add points to second line
lines(x = race$Year, y = race$Black_unemployment, col = "blue", lty = 2)
legend("topleft", legend = c("HS Rate", "College Rate", "Unemployment"), col = c("black", "red", "blue"), lty = c(1, 1, 2))
plot(x = race$Year, y = race$Black_unemployment, type = "b")
library(readxl)
supermarket <- read_excel("data/Supermarket Transactions.xlsx")
supermarket <- read_excel("data/Supermarket Transactions.xlsx", sheet = "Data")
View(supermarket)
boxplot(supermarket$Revenue)
str(supermarket)
boxplot(Revenue ~ Gender, data = supermarket)
boxplot(Revenue ~ `Marital Status`, data = supermarket)
boxplot(Revenue ~ Children, data = supermarket)
boxplot(Revenue ~ `Product Family`, data = supermarket)
boxplot(Revenue ~ `Product Family` + Children, data = supermarket)
boxplot(Revenue ~ `Product Department`, data = supermarket)
boxplot(Revenue ~ `Product Category`, data = supermarket)
boxplot(Revenue ~ `Gender`, data = supermarket)
boxplot(Revenue ~ `Gender` + `Marital Status`, data = supermarket)
View(supermarket)
plot(supermarket$`Purchase Date`, supermarket$Revenue)
table(supermarket$Children, supermarket$`Marital status`)
table(supermarket$Children, supermarket$`Marital Status`)
counts <- table(supermarket$Children, supermarket$`Marital Status`)
barplot(table(reddit$dog.cat))
barplot(counts)
counts <- table(supermarket$`Marital Status`, supermarket$Children)
barplot(counts)
names(counts)
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"))
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
counts <- table(supermarket$`Marital Status`, supermarket$Children, supermarket$Gender)
counts
barplot(counts, col = c("darkblue", "red", "green"), beside = TRUE)
barplot(counts)
str(supermarket)
counts <- table(supermarket$`Product Family`, supermarket$Homeowner)
barplot(counts)
table(supermarket$`Annual Income`, supermarket$Gender)
barplot(table(supermarket$`Annual Income`, supermarket$Gender))
barplot(table(supermarket$`Annual Income`, supermarket$`Marital Status`))
barplot(table(supermarket$`Annual Income`, supermarket$Homeowner))
barplot(table(supermarket$`Annual Income`, supermarket$Homeowner), beside = TRUE)
barplot(table(supermarket$Country, supermarket$Gender), beside = TRUE)
table(supermarket$Country, supermarket$Gender)
stripchart(mtcars$mpg)
hist()
facebook <- read.delim("data/facebook.tsv")
x <- na.omit(facebook$tenure)
h <- hist(x, breaks = 100, col = "grey", main = "Facebook User Tenure",
xlab = "Tenure (Days)")
xfit <- seq(min(x), max(x), length = 100)
yfit <- dnorm(xfit, mean = mean(x), sd = sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
h$mids[1:2]
h$mids
list(mids)
str(h)
lines(xfit, yfit, col = "red", lwd = 2)
d <- density(facebook$tenure, na.rm = TRUE)
polygon(d, col = "red", border = "blue")
plot(d, main = "Kernel Density of Tenure")
polygon(d, col = "red", border = "blue")
boxplot(mtcars$mpg, notch = TRUE)
points(mean(mtcars$mpg), pch=18, col = "red")
?abline
names(race)
pairs(race[, c("White_unemployment", "Black_unemployment",
"white_college", "black_college")])
plot(x = race$Year, y = race$black_college)
library(dplyr)
reddit <- read.csv("data/reddit.csv")
head(reddit)
head(supermarket)
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
counts <- table(supermarket$`Marital Status`, supermarket$Children)
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"))
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
proportions <- prop.table(counts)
proportions
barplot(proportions, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
