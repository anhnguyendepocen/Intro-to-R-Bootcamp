geom_smooth(se = FALSE, span = .1) +
labs(x = "x-axis title", y = "y-axis title",
color = "legend title", title = "Main title")
basic <- ggplot(prod_revenue, aes(`Purchase Date`, Revenue, color = `Product Family`)) +
geom_line(alpha = .2) +
geom_smooth(se = FALSE, span = .1) +
scale_y_continuous(labels = scales::dollar) +
labs(x = NULL, color = NULL, y = NULL, title = "Total Historical Revenue by Product Family")
basic
?stripchart
library(readxl)
facebook <- read.delim("data/facebook.tsv")
reddit <- read.csv("data/reddit.csv")
race <- read.csv("data/race-comparison.csv")
supermarket <- read_excel("data/Supermarket Transactions.xlsx", sheet = "Data")
hist(facebook$age, breaks = 100)
hist(facebook$age, breaks = 100, col = "grey", main = "Age of Facebook Users",
xlab = "Age (Years)")
View(facebook)
hist(facebook$friend_count, breaks = 100, col = "grey")
hist(log(facebook$friend_count), breaks = 100, col = "grey")
plot(facebook$friend_count, log="x", type = "h", lwd=10, lend=2)
plot(facebook$friend_count, log="x", type = "h")
hist(facebook$friend_count, breaks = 100, col = "grey", probability = TRUE)
hist(facebook$friend_count, log="x")
plot(facebook$friend_count, log = "x")
plot(facebook$friend_count, log = "x", type = "h")
hist(log(facebook$friend_count), breaks = 100, col = "grey")
log(800)
log(1000)
log(1200)
log(1800)
log(3600)
log(700)
exp(4)
log(55)
log10(55)
?log
hist(log10(facebook$friend_count), breaks = 100, col = "grey")
log10(2000)
log10(1000)
log10(500)
log10(200)
log10(60)
log10(100)
log10(1000)
log10(10)
plot(facebook$friend_count, log10 = "x", type = "h")
hist(log10(facebook$friend_count), breaks = 100, col = "grey")
hist(facebook$friend_count, breaks = 100, col = "grey")
hist(log10(facebook$friend_count), breaks = 100, col = "grey")
head(reddit)
table(reddit$education)
reddit %>%
group_by(education) %>%
tally()
library(dplyr)
reddit %>%
group_by(education) %>%
tally()
reddit %>%
group_by(education) %>%
tally() %>%
filter(education != NA) %>%
arrange(n)
reddit %>%
group_by(education) %>%
tally() %>%
filter(education != "NA") %>%
arrange(n)
reddit_ed <- reddit %>%
group_by(education) %>%
tally() %>%
filter(education != "NA") %>%
arrange(n)
par(mar = c(5,15,1,1), las = 1)
barplot(reddit_ed$n, names.arg = reddit_ed$education, horiz = TRUE)
reddit_ed <- reddit %>%
group_by(education) %>%
tally() %>%
filter(education != "NA") %>%
arrange(n)
par(mar = c(5,15,1,1), las = 1)
barplot(table(reddit$education), horiz = TRUE)
str(reddit)
reddit %>%
group_by(cheese) %>%
tally()
cheese <- reddit %>%
group_by(cheese) %>%
tally() %>%
filter(cheese != "NA") %>%
arrange(n)
dotchart(cheese$n, names.arg = cheese$cheese)
dotchart(cheese$n, labesl = cheese$cheese)
dotchart(cheese$n, labels = cheese$cheese)
dotchart(cheese$n, labels = cheese$cheese, color = "yellow")
dotchart(cheese$n, labels = cheese$cheese, fill = "yellow")
?dotchart
dotchart(cheese$n, labels = cheese$cheese, bg = "yellow")
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
revenue_by_date <- supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
plot(x = revenue_by_date$`Purchase Date`, y = revenue_by_date$Revenue, type = "l")
par()
?par
par(mar = c(5, 4, 4, 2))
dotchart(cheese$n, labels = cheese$cheese, bg = "yellow")
par(mar = c(5,15,1,1), las = 1)
barplot(reddit_ed$n, names.arg = reddit_ed$education, horiz = TRUE)
dotchart(cheese$n, labels = cheese$cheese, bg = "yellow")
plot(x = race$White_unemployment, y = race$Black_unemployment)
par(mar = c(5, 4, 4, 2))
plot(x = race$White_unemployment, y = race$Black_unemployment)
plot(x = revenue_by_date$`Purchase Date`, y = revenue_by_date$Revenue, type = "l")
plot(White_unemployment ~ Black_unemployment, data = race)
abline(lm(White_unemployment ~ Black_unemployment, data = race), col = "red")
lines(lowess(race$White_unemployment ~ race$Black_unemployment), col = "blue")
plot(x = revenue_by_date$`Purchase Date`, y = revenue_by_date$Revenue, type = "l")
lines(lowess(revenue_by_date$`Purchase Date` ~ revenue_by_date$Revenue), col = "blue")
plot(`Purchase Date` ~ Revenue, data = revenue_by_date, type = "l")
plot(Revenue ~ `Purchase Date`, data = revenue_by_date, type = "l")
lines(lowess(revenue_by_date$`Purchase Date` ~ revenue_by_date$Revenue), col = "blue")
lines(lowess(revenue_by_date$Revenue ~ revenue_by_date$`Purchase Date`), col = "blue")
plot(Revenue ~ `Purchase Date`, data = revenue_by_date, type = "l")
?lowess
lines(lowess(revenue_by_date$Revenue ~ revenue_by_date$`Purchase Date`, f = 1/3), col = "blue")
lines(lowess(revenue_by_date$Revenue ~ revenue_by_date$`Purchase Date`, f = 1/4), col = "blue")
plot(Revenue ~ `Purchase Date`, data = revenue_by_date, type = "l")
lines(lowess(revenue_by_date$Revenue ~ revenue_by_date$`Purchase Date`, f = 1/4), col = "blue")
pairs(race[, c("White_unemployment", "Black_unemployment",
"white_college", "black_college")])
pairs(race)
boxplot(Revenue ~ Gender, data = supermarket)
boxplot(Revenue ~ Gender + `Marital Status`, data = supermarket)
View(reddit)
View(supermarket)
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE),
Sales = sum(`Units Sold`, na.rm = TRUE))
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE),
Sales = sum(`Units Sold`, na.rm = TRUE)) %>%
mutate(Rev_per_Sale = Revenue = Sales)
supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE),
Sales = sum(`Units Sold`, na.rm = TRUE)) %>%
mutate(Rev_per_Sale = Revenue / Sales)
rev_per_sale <- supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE),
Sales = sum(`Units Sold`, na.rm = TRUE)) %>%
mutate(Rev_per_Sale = Revenue / Sales)
plot(Rev_per_Sale ~ `Purchase Date`, data = rev_per_sale, type = "l")
boxplot(Revenue ~ `Product Category`, data = supermarket)
boxplot?
?boxplot
boxplot(Revenue ~ `Product Category`, data = supermarket, horizontal = TRUE)
par(mar = c(5, 6, 4, 2))
boxplot(Revenue ~ `Product Category`, data = supermarket, horizontal = TRUE)
par(mar = c(5, 10, 4, 2))
boxplot(Revenue ~ `Product Category`, data = supermarket, horizontal = TRUE)
boxplot(Revenue ~ `Product Category` + Gender, data = supermarket, horizontal = TRUE)
supermarket %>%
group_by(`Purchase Date`, City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
supermarket %>%
group_by(`Purchase Date`, City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
spread(City, Revenue)
library(tidyr)
supermarket %>%
group_by(`Purchase Date`, City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
spread(City, Revenue)
supermarket %>%
group_by(`Purchase Date`, Country) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
spread(City, Revenue)
supermarket %>%
group_by(`Purchase Date`, Country) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
spread(Country, Revenue)
revenue_by_country <- supermarket %>%
group_by(`Purchase Date`, Country) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
?plot
plot(Revenue ~ `Purchase Date`, data = revenue_by_country, type = "l")
par(mar = c(5, 4, 4, 2))
revenue_by_country <- supermarket %>%
group_by(`Purchase Date`, Country) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
spread(Country, Revenue)
plot(USA ~ `Purchase Date`, data = revenue_by_country, type = "l")
plot(Canada ~ `Purchase Date`, data = revenue_by_country, type = "l", color = 'red')
revenue_by_date <- supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
plot(Revenue ~ `Purchase Date`, data = revenue_by_date, type = "l")
lines(lowess(revenue_by_date$Revenue ~ revenue_by_date$`Purchase Date`, f = 1/4), col = "blue")
plot(Revenue ~ `Purchase Date`, data = revenue_by_date, type = "l", col = "grey")
lines(lowess(revenue_by_date$Revenue ~ revenue_by_date$`Purchase Date`, f = 1/4), col = "blue")
par(mar = c(5, 10, 4, 2))
boxplot(Revenue ~ `Product Category`, data = supermarket, horizontal = TRUE)
par(mar = c(5, 4, 4, 2))
proportions <- prop.table(counts)
proportions
counts <- table(supermarket$`Marital Status`, supermarket$Children)
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"))
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
proportions <- prop.table(counts)
barplot(proportions, col = c("darkblue", "red"), legend = c("Married", "Single"))
barplot(proportions, col = c("darkblue", "red"), legend = c("Married", "Single"), beside = TRUE)
counts <- table(supermarket$`Product Family`, supermarket$Homeowner)
Q1 <- table(supermarket$`Product Family`, supermarket$Homeowner)
barplot(counts, beside = TRUE)
counts
counts <- table(supermarket$`Marital Status`, supermarket$Children)
counts
Q1 <- table(supermarket$`Product Family`, supermarket$Homeowner)
rownames(Q1)
barplot(counts, beside = TRUE, legend.text = rownames(Q1))
Q1 <- table(supermarket$`Product Family`, supermarket$Homeowner)
barplot(Q1, beside = TRUE, legend.text = rownames(Q1))
Q2 <- prop.table(table(supermarket$`Annual Income`, supermarket$Homeowner))
Q2
barplot(Q2)
factor(supermarket$`Annual Income`,
levels = c("$10K - $30K", "$30K - $50K",
"$50K - $70K", "$70K - $90K",
"$90K - $110K", "$110K - $130K",
"$130K - $150K", "$150K +"))
supermarket$`Annual Income` <- factor(supermarket$`Annual Income`,
levels = c("$10K - $30K", "$30K - $50K",
"$50K - $70K", "$70K - $90K",
"$90K - $110K", "$110K - $130K",
"$130K - $150K", "$150K +"))
Q2 <- prop.table(table(supermarket$`Annual Income`, supermarket$Homeowner))
barplot(Q2)
Q2
barplot(Q2, legend.text = rownames(Q2))
?legend.text
?barplot
barplot(Q2, legend.text = TRUE)
counts <- table(supermarket$`Marital Status`, supermarket$Children)
barplot(counts, col = c("darkblue", "red"), legend = c("Married", "Single"))
counts
barplot(Q1, beside = TRUE, legend.text = TRUE, legend("topleft"))
barplot(Q1, beside = TRUE, legend.text = TRUE)
legend("topleft")
barplot(Q1, beside = TRUE, legend.text = TRUE)
barplot(Q2, legend.text = TRUE)
Q3 <- prop.table(table(supermarket$Gender, supermarket$Country))
barplot(Q3, beside = TRUE, legend.text = TRUE)
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("blue", "pink"),)
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),)
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list("topleft"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", bty = "n"))
?args.legend
barplot(Q2, legend.text = TRUE)
legend("topleft")
barplot(Q2, legend.text = TRUE, args.legend = list(x = "topleft"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", ylim = c(0, .6)))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", ylim = c(0, .3)))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = .7))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = .5))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5), ylim = c(0, .3))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5), bty = "n")
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5, bty = "n"))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5, bty = "n", xpd = TRUE))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5, bty = "n", horiz=T))
barplot(Q2, legend.text = TRUE, args.legend = list(x = "topleft"))
barplot(Q2, legend.text = TRUE, args.legend = list(x = "topleft", cex = .7, bty = "n"))
barplot(Q2, legend.text = TRUE,
args.legend = list(x = "topleft", cex = .7, bty = "n", y.intersp=.8))
barplot(Q2, legend.text = TRUE,
args.legend = list(x = "topleft", cex = .7, bty = "n", y.intersp=1.5))
barplot(Q2, legend.text = TRUE,
args.legend = list(x = "topleft", cex = 1, bty = "n", y.intersp=1.5))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5, bty = "n", horiz=T))
barplot(Q3, beside = TRUE, legend.text = TRUE, col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5, bty = "n", y.intersp=1.5))
barplot(Q3, beside = TRUE, legend.text = c("Female", "Male"), col = c("pink", "blue"),
args.legend = list(x = "topleft", cex = 1.5, bty = "n", y.intersp=1.5))
rm(list = ls())
library(ggplot2)
library(readxl)
library(dplyr)
# data used
supermarket <- read_excel("data/Supermarket Transactions.xlsx", sheet = "Data")
facebook <- read.delim("data/facebook.tsv")
reddit <- read.csv("data/reddit.csv")
race <- read.csv("data/race-comparison.csv")
ggplot(data = mpg, aes(x = hwy)) +
geom_histogram()
ggplot(data = mpg, aes(x = hwy)) +
geom_freqpoly()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_density()
ggplot(data = supermarket, aes(x = Revenue)) +
geom_histogram(bins = 100, color = "grey40", fill = "white")
ggplot(data = supermarket, aes(x = `Product Family`)) +
geom_bar()
summary <- supermarket %>%
group_by(`Product Family`) %>%
tally()
summary
ggplot(facebook, aes(age)) +
geom_histogram()
ggplot(facebook, aes(age)) +
geom_histogram(bins = 100, color = "grey40", fill = "white")
ggplot(facebook, aes(tenure)) +
geom_histogram(bins = 100, color = "grey40", fill = "white")
ggplot(facebook, aes(gender)) +
geom_bar()
ggplot(filter(facebook, gender != "NA"), aes(gender)) +
geom_bar()
names(reddit)
ggplot(reddit, aes(age.range)) +
barplot()
head(reddit)
ggplot(reddit, aes(age.range)) +
geom_bar()
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point()
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", size = 1, shape = 5)
ggplot(supermarket, aes(`Purchase Date`, Revenue)) +
geom_point(colour = "blue", alpha = .25)
ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +
geom_point()
ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +
geom_jitter(size = 1)
ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +
geom_jitter(size = 1, alpha = .1)
ggplot(supermarket, aes(factor(`Units Sold`), Revenue)) +
geom_jitter(size = 1, alpha = .5)
sales_by_date <- supermarket %>%
group_by(`Purchase Date`) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE))
sales_plot <- ggplot(sales_by_date, aes(`Purchase Date`, Revenue)) +
geom_line()
sales_plot + geom_smooth(span = .1)
sales_plot + geom_smooth(span = .9, se = FALSE)
sales_plot + geom_smooth(method = "lm", se = FALSE)
View(facebook)
ggplot(facebook, aes(age, likes)) +
geom_point()
ggplot(facebook, aes(age, likes)) +
geom_point(alpha = .25)
ggplot(facebook, aes(gender, likes)) +
geom_boxplot()
ggplot(facebook, aes(gender, friend_count)) +
geom_boxplot()
ggplot(filter(facebook, gender != "NA"), aes(gender, friend_count)) +
geom_boxplot() +
coord_cartesian(xlim = 0, ylim = 1000)
ggplot(filter(facebook, gender != "NA"), aes(gender, friend_count)) +
geom_boxplot() +
coord_cartesian(ylim = 1000)
ggplot(filter(facebook, gender != "NA"), aes(gender, friend_count)) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 1000))
facebook %>%
group_by(gender) %>%
tally()
ggplot(filter(facebook, gender != "NA"), aes(gender)) +
geom_bar()
ggplot(filter(facebook, gender != "NA"), aes(gender, friend_count)) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 1000))
ggplot(facebook, aes(age, color = gender)) +
geom_freqpoly()
ggplot(facebook, aes(age, color = gender)) +
geom_freqpoly(bins = 100)
summary(facebook$dob_year)
facebook %>%
filter(dob >= 1990)
facebook %>%
filter(dob_year >= 1990)
gen_y <- facebook %>%
filter(dob_year >= 1990)
ggplot(gen_y, aes(tenure, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year)
ggplot(gen_y, aes(friend_count, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year)
ggplot(gen_y, aes(friendships_initiated, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year)
ggplot(gen_y, aes(mobile_likes, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year)
ggplot(gen_y, aes(mobile_likes, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year) +
scale_x_log10()
ggplot(gen_y, aes(friendships_initiated, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year) +
scale_x_log10()
ggplot(filter(gen_y, friendships_initiated != "NA"), aes(friendships_initiated, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year) +
scale_x_log10()
ggplot(filter(gen_y, gender != "NA"), aes(friendships_initiated, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year) +
scale_x_log10()
ggplot(facebook, aes(age, color = gender)) +
geom_freqpoly(bins = 100)
gen_y <- facebook %>%
filter(dob_year >= 1990 | gender != "NA")
ggplot(gen_y, aes(friendships_initiated, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year) +
scale_x_log10()
gen_y <- facebook %>%
filter(dob_year >= 1990, gender != "NA")
ggplot(gen_y, aes(friendships_initiated, color = gender)) +
geom_freqpoly(bins = 100) +
facet_wrap(~ dob_year) +
scale_x_log10()
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40") +
scale_x_continuous(limits = c(0, 60), breaks = seq(0, 60, by = 10),
labels = scales::dollar) +
ggtitle("Gross Revenue per Transaction")
supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
cty_levels <- supermarket %>%
group_by(City) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
arrange(Revenue)
cty_levels
city_rev <- supermarket %>%
group_by(City, Gender) %>%
summarise(Revenue = sum(Revenue, na.rm = TRUE)) %>%
ungroup() %>%
mutate(City = factor(City, levels = cty_levels$City))
city_rev
str(city_rev$City)
ggplot(city_rev, aes(Revenue, City, color = Gender)) +
geom_point() +
scale_x_continuous(labels = scales::dollar,
limits = c(0, 10000),
breaks = seq(0, 10000, by = 2000)) +
labs(x = NULL, y = NULL, title = "Total Revenue by Gender and Location") +
theme_minimal()
ggplot(supermarket, aes(Revenue)) +
geom_histogram(bins = 100, fill = "antiquewhite", color = "grey40")
rm(list = ls())
url <- "http://download.bls.gov/pub/time.series/oe/oe.series"
oes <- read.delim(url)
url <- "https://www.dropbox.com/s/fvtdtemdcfz1cgw/Data.csv"
crime <- read.csv(url)
head(crime)
url <- "https://www.dropbox.com/s/fvtdtemdcfz1cgw/Data.csv?dl=0"
crime <- read.csv(url)
rm(crime)
url <- "https://www.dropbox.com/s/fvtdtemdcfz1cgw/Data.csv?dl=1"
crime <- read.csv(url)
url <- "https://www.dropbox.com/s/fvtdtemdcfz1cgw/Data.csv?raw=0"
crime <- read.csv(url)
head(criem)
head(crime)
url <- "https://www.dropbox.com/s/fvtdtemdcfz1cgw/Data.csv?raw=1"
rm(crime)
crime <- read.csv(url)
library(gdata)
url <- "https://bradleyboehmke.github.io/public/data/Case Studies/Cincinnati Crime/Data.csv"
crime <- read.csv(url)
url <- "https://github.com/bradleyboehmke/bradleyboehmke.github.io/blob/master/public/data/Case%20Studies/Cincinnati%20Crime/Data.csv"
crime <- read.csv(url)
head(crime)
url <- "https://raw.githubusercontent.com/bradleyboehmke/bradleyboehmke.github.io/master/public/data/Case%20Studies/Cincinnati%20Crime/Data.csv"
crime <- read.csv(url)
Data <- read.csv("~/Desktop/bradleyboehmke.github.io/public/data/Case Studies/Cincinnati Crime/Data.csv", stringsAsFactors=FALSE)
View(Data)
rm(crime)
url <- "https://raw.githubusercontent.com/bradleyboehmke/bradleyboehmke.github.io/master/public/data/Case%20Studies/Cincinnati%20Crime/Data.csv"
crime <- read.csv(url)
